{
    "id": "EADAEC42",
    "path": null,
    "project_path": null,
    "type": "r_dataframe",
    "hash": "0",
    "contents": "",
    "dirty": false,
    "created": 1651446248801.0,
    "source_on_save": false,
    "relative_order": 4,
    "properties": {
        "expression": "structure(list(borough = c(\"Queens\", \"Queens\", \"Kings\", \"Bronx\",  \"Queens\", \"Kings\", \"Bronx\", \"New York\", \"New York\", \"New York\",  \"Bronx\", \"Bronx\", \"Bronx\", \"New York\", \"New York\", \"Kings\", \"Kings\",  \"Kings\", \"Kings\", \"Kings\", \"Queens\", \"Bronx\", \"Bronx\", \"Richmond\",  \"Richmond\", \"Queens\", \"Kings\", \"Bronx\", \"Bronx\", \"Bronx\", \"Kings\",  \"Kings\", \"Kings\", \"Kings\", \"Kings\", \"Kings\", \"Kings\", \"Kings\",  \"New York\", \"Richmond\", \"New York\", \"New York\", \"Queens\", \"New York\",  \"Richmond\", \"Richmond\", \"Richmond\", \"Richmond\", \"Kings\", \"Kings\",  \"Kings\", \"Richmond\", \"Bronx\", \"Kings\", \"Queens\", \"Queens\", \"Queens\",  \"New York\", \"Kings\", \"Kings\", \"Queens\", \"New York\", \"Queens\",  \"New York\", \"Kings\", \"Kings\", \"Kings\", \"Kings\", \"Bronx\", \"New York\",  \"Queens\", \"Queens\", \"Queens\", \"Richmond\", \"Kings\", \"Queens\",  \"Kings\", \"Kings\", \"Kings\", \"Kings\", \"Queens\", \"Bronx\", \"Bronx\",  \"Bronx\", \"New York\", \"Queens\", \"Bronx\", \"Kings\", \"Richmond\",  \"New York\", \"Kings\", \"Bronx\", \"New York\", \"New York\", \"Kings\",  \"New York\", \"Kings\", \"Queens\", \"New York\", \"New York\", \"Kings\",  \"Richmond\", \"Richmond\", \"Bronx\", \"Bronx\", \"New York\", \"New York\",  \"Kings\", \"New York\", \"Richmond\", \"Queens\", \"New York\", \"Kings\",  \"Queens\", \"Queens\", \"Kings\", \"New York\", \"Queens\", \"Richmond\",  \"Queens\", \"Queens\", \"Queens\", \"New York\", \"New York\", \"New York\",  \"Bronx\", \"Queens\", \"Bronx\", \"Bronx\", \"Kings\", \"Queens\", \"Kings\",  \"Bronx\", \"New York\", \"Queens\", \"Queens\", \"Queens\", \"Kings\", \"New York\",  \"Bronx\", \"Bronx\", \"Bronx\", \"New York\", \"New York\", \"New York\",  \"Bronx\", \"New York\", \"Kings\", \"Kings\", \"New York\", \"New York\",  \"New York\", \"Kings\", \"Kings\", \"Kings\", \"Kings\", \"New York\", \"New York\",  \"Kings\", \"New York\", \"Kings\", \"Richmond\", \"New York\", \"Kings\",  \"Bronx\", \"New York\", \"Kings\", \"Bronx\", \"Bronx\", \"New York\", \"New York\",  \"New York\", \"New York\", NA, \"New York\", \"New York\", \"New York\",  \"Queens\", \"New York\", \"New York\", \"New York\", \"Bronx\", \"Bronx\",  \"New York\", \"Queens\", \"Queens\", \"Queens\", NA, \"Kings\", \"Kings\",  \"New York\", \"Bronx\", \"Bronx\", \"Bronx\", \"Queens\", \"Kings\", \"Kings\",  \"Queens\", \"New York\", \"Kings\", \"Queens\", \"Queens\", \"Queens\",  \"Queens\", \"Kings\", \"Queens\", \"Queens\", \"Kings\"), councildist = c(\"28\",  \"19\", \"40\", \"16\", \"29\", \"39\", \"11\", \"10\", \"9\", \"6\", \"14\", \"11\",  \"14\", \"4\", \"2\", \"39\", \"43\", \"38\", \"37\", \"39\", \"21\", \"18\", \"17\",  \"49\", \"50\", \"26\", \"37\", \"8\", \"16\", \"8\", \"48\", \"48\", \"38\", \"48\",  \"44\", \"39\", \"48\", \"42\", \"10\", \"51\", \"2\", \"8\", \"26\", \"8\", \"50\",  \"51\", \"51\", \"49\", \"37\", \"35\", \"39\", \"49\", \"11\", \"34\", \"22\", \"34\",  \"29\", \"8\", \"37\", \"47\", \"26\", \"2\", \"26\", \"7\", \"33\", \"35\", \"35\",  \"33\", \"16\", \"2\", \"26\", \"26\", \"31\", \"51\", \"36\", \"26\", \"41\", \"47\",  \"47\", \"38\", \"25\", \"11\", \"11\", \"17\", \"8\", \"24\", \"15\", \"42\", \"50\",  \"7\", \"46\", \"13\", \"9\", \"9\", \"38\", \"4\", \"42\", \"29\", \"1\", \"1\", \"43\",  \"49\", \"49\", \"11\", \"13\", \"7\", \"5\", \"41\", \"7\", \"49\", \"19\", \"4\",  \"47\", \"24\", \"28\", \"39\", \"8\", \"24\", \"49\", \"22\", \"30\", \"31\", \"8\",  \"7\", \"9\", \"8\", \"26\", \"17\", \"11\", \"33\", \"25\", \"45\", \"17\", \"3\",  \"22\", \"29\", \"20\", \"40\", \"1\", \"15\", \"15\", \"17\", \"3\", \"3\", \"2\",  \"17\", \"1\", \"36\", \"40\", \"3\", \"3\", \"3\", \"39\", \"39\", \"40\", \"34\",  \"1\", \"1\", \"39\", \"6\", \"35\", \"49\", \"3\", \"33\", \"17\", \"10\", \"36\",  \"15\", \"14\", \"3\", \"3\", \"3\", \"3\", \"1\", \"3\", \"3\", \"3\", \"22\", \"1\",  \"1\", \"2\", \"11\", \"11\", \"5\", \"22\", \"22\", \"22\", \"39\", \"34\", \"33\",  \"1\", \"8\", \"17\", \"11\", \"26\", \"35\", \"39\", \"26\", \"2\", \"33\", \"25\",  \"26\", \"23\", \"26\", \"41\", \"22\", \"31\", \"37\"), food_scrap_drop_off_site = c(\"Discovery Community Garden\",  \"Coastal Preservation Network\", \"Rogers/Tilden/Veronica Place Garden\",  \"BronxWorks Carolyn McLaughlin Community Center\", \"Forest Hills Greenmarket\",  \"WEATHER CLOSURE 1/29: Grand Army Plaza Greenmarket\", \"Norwood Farmstand\",  \"181st Street Food Scrap Drop-off\", \"145th St Food Scrap Drop-off\",  \"Tucker Square Thursday Greenmarket\", \"WEATHER CLOSURE 1/29: New Settlement Community Center\",  \"Spuyten Duyvil PreSchool\", \"New Beginnings Community Garden\",  \"Dag Hammarskjold Plaza Greenmarket\", \"Madison Square Park Food Scrap Drop-off\",  \"WEATHER CLOSURE 1/29: Kensington Food Scrap Drop-off\", \"WEATHER CLOSURE 1/29: Bay Ridge Food Scrap Drop-off\",  \"CLOSED 1/29: 7th Ave Sunset Park Greenmarket\", \"Aberdeen Community Garden\",  \"Old Stone House Brooklyn\", \"Corona Food Scrap Drop-off\", \"Parkchester Food Scrap Drop-off\",  \"Montefiore's Bronx Health Collective Fresh Food Box\", \"Venture House\",  \"Manor Heights\", \"Astoria Pug: Hunter's Point\", \"Moffat Street Community Garden\",  \"Mott Haven Food Scrap Drop-off\", \"Morrisania Food Scrap Drop-off\",  \"Padre Plaza Community Garden\", \"Brighton Beach Avenue at Coney Island Avenue\",  \"Avenue U and East 16th Street\", \"18th Avenue at 64th Street\",  \"Kings Highway and East 16th Street\", \"Bay Parkway at 66th Street\",  \"Albemarle Road and McDonald Avenue\", \"Brighton Beach Avenue and Ocean Parkway\",  \"Canarsie Compost Yard\", \"Morris-Jumel Community Garden\", \"Arden Heights\",  \"Corlears Hook Park\", \"Uptown Grand Central Fresh Food Box\",  \"Rusty Wheelbarrow Farm\", \"Maggie's Magic Garden\", \"Midland Beach\",  \"Rossville\", \"Pleasant Plains\", \"Grymes Hill Wagner College\",  \"Cypress Hills Food Scrap Drop-off\", \"Crown Heights Farmstand\",  \"WEATHER CLOSURE 1/30: Big Reuse Warehouse\", \"WEATHER CLOSURE 1/28: West Brighton\",  \"Riverdale Neighborhood House\", \"Farm To People\", \"Astoria Pug: 41st Street\",  \"WEATHER CLOSURE 1/29: Ridgewood Food Scrap Drop-off\", \"Kew Gardens Food Scrap Drop-off\",  \"Carver Community Garden\", \"Wilson Ave Food Scrap Drop-off\",  \"Bensonhurst Food Scrap Drop-off\", \"Socrates Sculpture Park\",  \"CLOSED FOR THE SEASON: La Plaza Cultural Community Garden\",  \"WEATHER CLOSURE 1/29: Sunnyside Greenmarket\", \"Columbia Sunday Greenmarket\",  \"WEATHER CLOSURE 1/29: Brooklyn Borough Hall Saturday Greenmarket\",  \"Crown Heights Franklin Ave Food Scrap Drop-off\", \"Prospect Heights Food Scrap Drop-off Site\",  \"WEATHER CLOSURE 1/30: Transmitter Park Drop-Off\", \"CLOSED FOR THE SEASON: New Settlement- 170 Farm Stand\",  \"Down to Earth Garden\", \"CLOSED FOR THE SEASON: New Roots Community Garden, Queens\",  \"The Connected Chef\", \"CLOSED FOR THE SEASON: Spring Thyme Farm\",  \"CLOSED FOR THE SEASON: Staten Island Mall Greenmarket\", \"1100 Bergen Street Community Garden\",  \"45th Street Composters\", \"CLOSED FOR THE SEASON: Farmers Garden\",  \"Avenue X at West Street\", \"Bay Parkway at 86th Street\", \"Rappaport Playground\",  \"Jackson Heights Greenmarket\", \"CLOSED FOR THE SEASON: James Baldwin Outdoor Learning Center\",  \"CLOSED FOR THE SEASON: Van Cortlandt Park Alliance Farm Stand\",  \"Bronx River House / Starlight Park\", \"Rodale Pleasant Park Community Garden\",  \"CLOSED FOR THE SEASON: Briarwood CSA\", \"CLOSED FOR THE SEASON: Garden of Happiness\",  \"CLOSED FOR THE SEASON: UCC Youth Farm\", \"Grace Foundation\",  \"Maggie's Garden\", \"Genovesi Environmental Study Center\", \"Einstein Community Garden\",  \"134th Street Farm\", \"127th Street Learning Annex\", \"Los Colibr√≠es Community Garden\",  \"St. Vartan Park\", \"Abib Newborn Learning Garden\", \"Kew Gardens CSA\",  \"Battery Park City Authority Rockefeller Park\", \"Battery Park City Authority Headquarters\",  \"4th Avenue Presbyterian Church\", \"WEATHER CLOSURE 1/29: Staten Island Urban Center\",  \"H.E.A.L.T.H for Youths Skyline Community Garden\", \"CLOSED FOR THE SEASON: Riverdale Y Sunday Market\",  \"CLOSED FOR THE SEASON: The Garden at Preston\", \"Jenny's Garden\",  \"East 96th Street Food Scrap Drop-off\", \"CLOSED FOR THE SEASON: Howard Garden\",  \"Frank White Memorial Garden\", \"Olivet Heavenly Harvest\", \"St. Anastasia Roman Catholic Church\",  \"CLOSED FOR THE SEASON: 9C Community Garden Composting\", \"PS 90 Coney Island\",  \"King Manor Museum\", \"CLOSED FOR THE SEASON: Paradise Garden\",  \"Christ Church Community Compost\", \"CLOSED FOR THE SEASON: Lydia's Magic Garden\",  \"Kehilat Sephardim Food Pantry\", \"WEATHER CLOSURE 1/29: St. George Greenmarket\",  \"Astoria Pug: Most Precious Blood\", \"Glendale Community Garden\",  \"Garden of Resilience\", \"Pleasant Village Community Garden\",  \"97th Street Greenmarket\", \"Abyssinian Tot Lot\", \"Target Bronx Community Garden\",  \"Commuter Composting at 21 St-Queensbridge F\", \"New Roots Community Farm\",  \"Praxis Housing\", \"Vinegar Hill Community Garden\", \"CLOSED FOR THE SEASON: Farm Spot CSA\",  \"WEATHER CLOSURE 1/29: Wyckoff Farmhouse Museum\", \"WEATHER CLOSURE 1/29: Kelly Street Garden\",  \"Mathews-Palmer Park\", \"Astoria Pug: Hoyt\", \"The Compost Collective\",  \"Queens Botanical Garden Public Food Scrap Drop-Off\", \"WEATHER CLOSURE 1/29: Maple Street Community Garden\",  \"WEATHER CLOSURE 1/29: Tribeca Greenmarket\", \"CLOSED FOR THE SEASON: La Familia Verde Farmer's Market\",  \"CLOSED FOR THE SEASON: Garden of Youth\", \"Mary Mitchell Family & Youth Center\",  \"WEATHER CLOSURE 1/29: Abingdon Square Greenmarket\", \"Christopher Park\",  \"Tompkins Square Greenmarket\", \"Synergi Urban Farm 2.0\", \"Bowling Green Greenmarket\",  \"Imani Community Garden\", \"Cortelyou Greenmarket\", \"Hudson River Park Pier 96 Boathouse at W 55 St\",  \"Hudson River Park Pier 66 at W 26 St\", \"Hudson River Park Pier 46 at Charles St\",  \"Gowanus Salt Lot\", \"Prospect Farm\", \"Q Gardens\", \"Sure We Can\",  \"Governors Island Zero Waste Stations\", \"CLOSED FOR THE SEASON: Governors Island Compost Learning Center\",  \"Carroll Gardens Greenmarket\", \"79th St. Greenmarket\", \"WEATHER CLOSURE 1/29: Fort Greene Greenmarket\",  \"Compost Demonstration Site at Snug Harbor Cultural Center & Botanical Garden\",  \"8th Ave & 23rd St\", \"WEATHER CLOSURE 1/29: McCarren Park Greenmarket\",  \"CLOSED FOR THE SEASON: Lincoln Hospital Greenmarket\", \"WEATHER CLOSURE 1/29: Inwood Greenmarket\",  \"WEATHER CLOSURE 1/29: Bed Stuy Fresh Food Box\", \"Fordham Plaza Food Scrap Drop-off\",  \"Kingsbridge Heights Community Center:\", \"Hudson River Park's Pier 84 at W. 44th St.\",  \"Hudson River Park's Pier 76 at W. 34th St.\", \"Hudson River Park's Pier 51 at Horatio St.\",  \"Hudson River Park's Pier 40 at W. Houston St.\", \"Hudson River Park's Pier 25 at N. Moore St.\",  \"Hudson River Park's Chelsea Waterside Park at W. 23rd St.\",  \"Hudson River Park's 14th Street Park at 10th Ave.\", \"6th Ave & Spring St\",  \"Astoria Pug: Newtown\", \"East Broadway & Rutgers Street\", \"Grand Street & Clinton Street\",  \"1st Ave and¬† 1st St\", \"Keepers House Edible Garden\", \"Mediator's Composting Initiative\",  \"Roosevelt Island Farmers Market\", \"Astoria Pug: Ditmars\", \"Astoria Pug: Steinway\",  \"Astoria Pug: Broadway\", \"WEATHER CLOSURE 1/30: Nurture BK\",  \"BK Rot\", \"WEATHER CLOSURE 1/30: North Brooklyn Compost\", \"Governors Island Soissons Ferry Landing\",  \"Friends of Brook Park Community Garden\", \"Drew Gardens\", \"WEATHER CLOSURE 1/31: Lehman College\",  \"Moore-Jackson Cemetery/Garden\", \"CLOSED FOR THE SEASON: Walt L Shamel Community Garden\",  \"CLOSED FOR THE SEASON: East 4th Street Community Garden\", \"Woodside Sunnyside Composting\",  \"WEATHER CLOSURE 1/29: Union Square Greenmarket\", \"Domino Park\",  \"St. James Compost\", \"Smiling Hogshead Ranch\", \"Queens County Farm Museum\",  \"JH Scraps\", \"CLOSED FOR THE SEASON: Iso Student Farm\", \"Hellgate Farm\",  \"Edgemere Farm\", \"CLOSED FOR THE SEASON: Bushwick Grows! Community Garden\" ), location = c(\"108-56 Union Hall St Jamaica, NY 11433\", \"College Point Blvd & 14th Ave\",  \"2601 - 2603 Tilden Avenue, Brooklyn 11226\", \"1130 Grand Concourse, Bronx, NY 10456\",  \"MacDonald Park: Queens Blvd and 70th Ave\", \"Flatbush Ave & Eastern Pkwy, north of the arch\",  \"E Gun Hill Road and Dekalb Ave. (SE corner)\", \"W 181st St & Fort Washington Ave, New York, NY 10033\",  \"145th St & Edgecombe Ave\", \"66th St and Columbus Ave.\", \"1501 Jerome Ave, Bronx, NY 10452\",  \"3041 Kingsbridge Avenue\", \"2502 Davidson Ave\", \"E 47th St & 2nd Ave\",  \"23rd St & Broadway\", \"McDonald Ave & Albemarle Rd\", \"3rd Ave & 95th Street\",  \"7th Ave & 44th St\", \"91 Aberdeen St, Brooklyn, 11207\", \"336 3rd St, Brooklyn, NY 11215\",  \"Roosevelt Ave at 103 Street\", \"Westchester Ave and White Plains Rd.\",  \"871 Prospect Ave\", \"1442 Castleton Avenue, 10302\", \"Woodward Ave and Woolley Ave, 10314\",  \"46th Avenue and 5th Street\", \"9 Moffat St, Brooklyn, NY 11207\",  \"545 East 142nd Street\", \"McKinley Square at 169th St & Boston Rd\",  \"541 E 139th St, Bronx, NY 10454\", \"South of Brighton Beach Avenue, between Coney Island Avenue and Brighton 11th Street\",  \"Avenue U and East 16th Street, southeast corner\", \"west of 18th Avenue between 64th Street and 63rd Street\",  \"Kings Highway and East 16th Street, northeast corner\", \"east of Bay Parkway between 66th Street & West 8th Street\",  \"southwest corner of McDonald Avenue and Albemarle Road, near Church Avenue F subway entrance\",  \"Southeast corner of Brighton Beach Avenue and Ocean Parkway (Same corner as Big Bazaar Supermarket)\",  \"1149 Rockaway Avenue, Brooklyn NY, 11236\", \"457 West 162nd Street\",  \"Arden Avenue and Forest Green\", \"397 FDR Dr, New York, NY 10002 (Southeast corner of Cherry Street and Jackson Street)\",  \"Uptown Grand Central Plaza  Park Ave &, E 125th St, Manhattan, NY 10035\",  \"72-2 Woodside Ave, Woodside, NY 11377\", \"1574 Lexington Ave, New York, NY 10029\",  \"Bedford Ave and Mason Ave\", \"Gladwin St and Pitney Ave\", \"Bloomingdale Rd and Drumgoole Road East\",  \"1 Campus Rd, Staten Island, NY 10301\", \"Fulton St. between Richmond and Logan Sts (in front of Cypress Hills Senior Center)\",  \"Nostrand Ave & Sullivan Pl\", \"1 12th Street, Brooklyn NY\", \"Alaska Street and Henderson Avenue\",  \"5521 Mosholu Avenue Bronx, NY 10471\", \"1100 Flushing Ave, Brooklyn, NY 11237\",  \"Ditmars Boulevard and 41st Street\", \"Myrtle Ave & Cypress Ave\",  \"Metropolitan Ave & Audley St\", \"242 East 124th\", \"Wilson Ave & Moffat St (near L train)\",  \"18th Ave & 81st St\", \"Broadway & Vernon Blvd, Queens, NY 11106\",  \"674 East 9th Street\", \"Skillman Ave & 42nd St\", \"116th St & Broadway\",  \"Court St and Montague St\", \"Franklin Avenue & Eastern Parkway\",  \"Park Place & Carlton Ave\", \"2 Greenpoint Ave and West Street\",  \"Corner of East 170th Street and Townsend Avenue\", \"546 East 12th St\",  \"Adjacent to 41-38 69th Street and Woodside Avenue\", \"49-09 5th Street and 49th Avenue\",  \"224th Street 147th Avenue\", \"Staten Island Mall, Marsh Ave & Ring Rd, Staten Island, NY 10314\",  \"1107 Bergen Street, Brooklyn, NY 11216\", \"41-12 45th Street (45th St & Skillman Ave, Queens, NY 11104)\",  \"1899 Bergen Street\", \"SW corner of Avenue X and West Street, in front of Rite Aide, across from P.S.216\",  \"Near NE corner of Bay Parkway and 86th Street (Off Bay Parkway D Subways station between 85th and 86th Streets)\",  \"NW corner of Fort Hamilton Pkwy and 53rd Street\", \"79th St and Northern Blvd\",  \"100 W Mosholu Pkwy S, The Bronx, NY 10468\", \"Orloff Avenue and Gale Place\",  \"1490 Sheridan Blvd\", \"437 E 114th St, New York, NY 10029\", \"85-12 Main St, Briarwood, NY 11435\",  \"2144F Prospect Ave, The Bronx, NY 10460\", \"613 New Lots Avenue\",  \"460w Brielle Avenue\", \"564 W 149th St\", \"7151 Avenue T, Brooklyn, NY 11234\",  \"Near 1975 Eastchester Road\", \"118 W 134th St\", \"128 West 127th Street\",  \"219 34th Street, Brooklyn 11232\", \"St. Vartan Park  Near the 1st Ave. & E 36th St. entrance\",  \"495 Osborn St, Brooklyn, NY 11212\", \"Kew Gardens Cinemas Park  Austin St. off of Lefferts Blvd Queens, NY 11415\",  \"Lower level downstairs at corner of Chambers St and River Terrace\",  \"75 Battery Place\", \"6753 4th Avenue, Brooklyn, NY 11220\", \"208 Bay Street\",  \"1 Clyde Place\", \"4545 Independence Ave\", \"2780 Schurz Ave, The Bronx, NY 10465 (Intersection of Schurz Avenue and Huntington Avenue)\",  \"699 West 138th Street\", \"96th St & Lexington Ave\", \"750 Howard Avenue\",  \"506 West 143rd Street, New York, NY 10031\", \"97 Myrtle Avenue, Staten Island, NY\",  \"246-02 Northern Blvd; Enter the path to the right of the school yard to the student garden\",  \"E 9th St & Ave C - NE corner, next to Citibike station\", \"2840 W 12th Street, Brooklyn, NY 11224\",  \"150-03 Jamaica Ave, Jamaica, NY 11432\", \"107-31 Inwood St, Queens, NY 11435\",  \"326 Clinton Street\", \"1665 Park Avenue, Manhattan 10035 between 117th and 118th Streets\",  \"15062 78th Rd, Queens, NY 11367\", \"St. Marks¬†Pl and Hyatt St\",  \"32-23 36th St, Queens, NY 11106\", \"74-10 88th St, Glendale, NY 11385\",  \"179-18 145th Dr, Jamaica, NY 11434\", \"342 Pleasant Ave., New York, NY 10035\",  \"W 97th St and Amsterdam Ave\", \"130 W 139th St, New York, NY 10030\",  \"1024 Woodycrest Avenue\", \"NW Corner of 21st street at 41st Ave\",  \"670 Grand Concourse, The Bronx, NY 10451\", \"4339 White Plains Road\",  \"199 York St, Brooklyn, NY 11201\", \"33-50 82nd street\", \"5816 Clarendon Rd, Brooklyn, NY 11203\",  \"924 Kelly St, The Bronx, NY 10459\", \"437 W 45 St, New York, NY 10036\",  \"Northwest corner of Hoyt Avenue North and 21st Street, in a courtyard that?s officially called SITTING AREA\",  \"The corner of Yellowstone Blvd, and Kessel Street Forest Hills, NY 11375\",  \"Parking Garden at QBG 42-80 Crommelin Avenue, Flushing, NY 11355\",  \"237 Maple St, Brooklyn, NY 11225\", \"Tribeca Greenmarket\", \"Tremont Ave between LaFontaine and Arthur Ave (Tremont Park)\",  \"Corner of 182 St and Prospect Ave, Bronx, NY 10457\", \"2007 Mapes Ave, Bronx, NY 10460\",  \"W 12th St and 8th Ave\", \"West 4th Street b/w Christopher St and Grove St., west side of Christopher Park\",  \"E 7th St & Avenue A, New York, NY 10009\", \"1211 Hoe Ave, Bronx, NY 10459\",  \"Broadway at Battery Place, New York, NY 10004\", \"87-91 Schenectady Ave, Brooklyn, NY 11213\",  \"Argyle Rd and Cortelyou Rd\", \"Park Pier 96 Boathouse at W 55 St\",  \"Pier 66 at W 26 St\", \"Pier 46 at Charles St\", \"2 2nd Ave, Brooklyn, NY 11215\",  \"1194 Prospect Ave, Brooklyn, NY 11218\", \"58 E 18th St, Brooklyn, NY 11226\",  \"219 McKibben Street, Brooklyn, NY 11206\", \"Several locations throughout Governors Island\",  \"758 Enright Rd\", \"Smith St and 1st Pl\", \"77th Street between Columbus Ave and Central Park West\",  \"Washington Park and Willoughby Ave\", \"Compost Demonstration Site at Snug Harbor Cultural Center & Botanical Garden 1000 Richmond Terrace\",  \"West 23rd Street at 8th Avenue, North side of W 23rd Street, just east of 8th Avenue\",  \"N 12th St and Driggs Ave\", \"149th St between Park Ave and Morris Ave\",  \"Seaman Ave and Isham St (N corner)\", \"Decatur St and Lewis Ave\",  \"E Fordham Rd between Webster Ave & Third Ave\", \"3101 Kingsbridge Terrace, Bronx NY 10463\",  \"Pier 84 at W. 44th St. near dog park\", \"Pier 76 at 34th Street and 12th Ave outside of compost yard South of 34th St\",  \"Pier 51 at Horatio St. near playground\", \"Pier 40 at Houston St. near dog park\",  \"Pier 25 at N. Moore St. near kid's playground\", \"Chelsea Waterside Park near the playground\",  \"14th Street Park at southwest corner of 15th St. and 10th Ave\",  \"6th Avenue & Spring Street -NE Corner\", \"30-36 41st Street, Astoria, NY\",  \"East side of Rutgers St b/w East Broadway & Canal St, on the west side of Straus Sq\",  \"Grand Street & Clinton Street\", \"First Avenue between Houston and First Street (West Side)\",  \"3400 Reservoir Oval East\", \"260 West 231 Street Bronx, NY 10463\",  \"543 Main St, New York, NY 10044 (Good Shepherd Plaza)\", \"Ditmars #1 Municipal Parking Field 22-18 33rd Street\",  \"38-12 30th Ave, Queens, NY 11103\", \"32-11 31st St, Queens, NY 11106\",  \"Prospect Park, West of the entrance on Parkside Av (& Ocean Av)\",  \"1309 Dekalb Ave, Brooklyn, NY 11221 (Know Waste Lands Community Garden)\",  \"Russell Street &, Nassau Ave, Brooklyn, NY 11222\", \"Adjacent to Soissons Landing and Taco Vista\",  \"494 E 141st St, The Bronx, NY 10454\", \"1070 East Tremont Avenue. between Bronx Street and, Boston Rd, The Bronx, NY 10460\",  \"Gate 8: Bedford Park Blvd West & Paul Ave Bronx, NY 10468\",  \"31-61 51st St, Woodside, NY 11377\", \"1097 Dean St, Brooklyn, NY 11216\",  \"173 E 4th St, Brooklyn, NY 11218\", \"38-63-38-1 50th St, Woodside, NY 11377\",  \"E 17th St & Union Square E, New York, NY\", \"15 River Street Brooklyn, NY 11249\",  \"86-02 Broadway, Elmhurst, NY 11373\", \"Pearson Pl & Skillman Ave, Queens, NY 11101\",  \"73-50 Little Neck Parkway, Queens, NY 11004\", \"35-20 69th Street, Jackson Heights, NY 11372\",  \"514 Rockaway Avenue, Brooklyn, NY 11212\", \"14-33 30th Drive, Long Island City, NY 11102\",  \"385 Beach 45th St,¬†Far Rockaway, NY 11691\", \"1474 Gates Ave, Brooklyn, NY 11237\" ), ntaname = c(\"South Jamaica\", \"College Point\", \"Erasmus\", \"East Concourse-Concourse Village\",  \"Forest Hills\", \"Park Slope-Gowanus\", \"Norwood\", \"Washington Heights North\",  \"Hamilton Heights\", \"Lincoln Square\", \"West Concourse\", \"Spuyten Duyvil-Kingsbridge\",  \"Kingsbridge Heights\", \"Turtle Bay-East Midtown\", \"Hudson Yards-Chelsea-Flatiron-Union Square\",  \"Kensington-Ocean Parkway\", \"Bay Ridge\", \"Sunset Park East\",  \"park-cemetery-etc-Brooklyn\", \"Park Slope-Gowanus\", \"North Corona\",  \"Parkchester\", \"Morrisania-Melrose\", \"Port Richmond\", \"New Springville-Bloomfield-Travis\",  \"Hunters Point-Sunnyside-West Maspeth\", \"Bushwick South\", \"Mott Haven-Port Morris\",  \"Morrisania-Melrose\", \"Mott Haven-Port Morris\", \"Brighton Beach\",  \"Madison\", \"Bensonhurst West\", \"Madison\", \"Bensonhurst East\",  \"Kensington-Ocean Parkway\", \"Brighton Beach\", \"East New York\",  \"Washington Heights South\", \"Arden Heights\", \"Lower East Side\",  \"East Harlem North\", \"Elmhurst-Maspeth\", \"East Harlem South\",  \"New Dorp-Midland Beach\", \"Charleston-Richmond Valley-Tottenville\",  \"Charleston-Richmond Valley-Tottenville\", \"Grymes Hill-Clifton-Fox Hills\",  \"Cypress Hills-City Line\", \"Crown Heights South\", \"Park Slope-Gowanus\",  \"West New Brighton-New Brighton-St. George\", \"North Riverdale-Fieldston-Riverdale\",  \"Bushwick North\", \"Steinway\", \"Ridgewood\", \"Kew Gardens\", \"East Harlem North\",  \"Bushwick South\", \"Bensonhurst West\", \"Queensbridge-Ravenswood-Long Island City\",  \"Lower East Side\", \"Hunters Point-Sunnyside-West Maspeth\", \"Morningside Heights\",  \"DUMBO-Vinegar Hill-Downtown Brooklyn-Boerum Hill\", \"Crown Heights North\",  \"Prospect Heights\", \"Greenpoint\", \"West Concourse\", \"Lower East Side\",  \"Woodside\", \"Hunters Point-Sunnyside-West Maspeth\", \"Springfield Gardens South-Brookville\",  \"Todt Hill-Emerson Hill-Heartland Village-Lighthouse Hill\", \"Crown Heights North\",  \"Hunters Point-Sunnyside-West Maspeth\", \"Ocean Hill\", \"Gravesend\",  \"Bensonhurst West\", \"Borough Park\", \"Jackson Heights\", \"Van Cortlandt Village\",  \"Van Cortlandt Village\", \"Crotona Park East\", \"East Harlem North\",  \"Briarwood-Jamaica Hills\", \"East Tremont\", \"East New York\", \"Todt Hill-Emerson Hill-Heartland Village-Lighthouse Hill\",  \"Hamilton Heights\", \"Georgetown-Marine Park-Bergen Beach-Mill Basin\",  \"Pelham Parkway\", \"Central Harlem North-Polo Grounds\", \"Central Harlem North-Polo Grounds\",  \"Sunset Park West\", \"Murray Hill-Kips Bay\", \"Brownsville\", \"Kew Gardens\",  \"Battery Park City-Lower Manhattan\", \"Battery Park City-Lower Manhattan\",  \"Bay Ridge\", \"Stapleton-Rosebank\", \"West New Brighton-New Brighton-St. George\",  \"North Riverdale-Fieldston-Riverdale\", \"Schuylerville-Throgs Neck-Edgewater Park\",  \"Hamilton Heights\", \"Upper East Side-Carnegie Hill\", \"Brownsville\",  \"Hamilton Heights\", \"New Brighton-Silver Lake\", \"Douglas Manor-Douglaston-Little Neck\",  \"Stuyvesant Town-Cooper Village\", \"West Brighton\", \"Jamaica\",  \"South Jamaica\", \"Carroll Gardens-Columbia Street-Red Hook\",  \"East Harlem North\", \"Kew Gardens Hills\", \"West New Brighton-New Brighton-St. George\",  \"Astoria\", \"Glendale\", \"Springfield Gardens South-Brookville\",  \"East Harlem North\", \"Upper West Side\", \"Central Harlem North-Polo Grounds\",  \"Highbridge\", \"Queensbridge-Ravenswood-Long Island City\", \"East Concourse-Concourse Village\",  \"Woodlawn-Wakefield\", \"DUMBO-Vinegar Hill-Downtown Brooklyn-Boerum Hill\",  \"Jackson Heights\", \"Rugby-Remsen Village\", \"Longwood\", \"Clinton\",  \"Steinway\", \"Rego Park\", \"Flushing\", \"Prospect Lefferts Gardens-Wingate\",  \"SoHo-TriBeCa-Civic Center-Little Italy\", \"Claremont-Bathgate\",  \"East Tremont\", \"East Tremont\", \"West Village\", \"West Village\",  \"East Village\", \"Morrisania-Melrose\", \"Battery Park City-Lower Manhattan\",  \"Crown Heights North\", \"Flatbush\", \"Clinton\", \"Hudson Yards-Chelsea-Flatiron-Union Square\",  \"West Village\", \"Park Slope-Gowanus\", \"Windsor Terrace\", \"Flatbush\",  \"Bushwick South\", \"park-cemetery-etc-Manhattan\", \"park-cemetery-etc-Manhattan\",  \"Carroll Gardens-Columbia Street-Red Hook\", \"Upper West Side\",  \"Fort Greene\", \"West New Brighton-New Brighton-St. George\", \"Hudson Yards-Chelsea-Flatiron-Union Square\",  \"North Side-South Side\", \"Melrose South-Mott Haven North\", \"park-cemetery-etc-Manhattan\",  \"Stuyvesant Heights\", \"Claremont-Bathgate\", \"Van Cortlandt Village\",  \"Clinton\", \"Hudson Yards-Chelsea-Flatiron-Union Square\", \"West Village\",  \"West Village\", \"SoHo-TriBeCa-Civic Center-Little Italy\", \"Hudson Yards-Chelsea-Flatiron-Union Square\",  \"Hudson Yards-Chelsea-Flatiron-Union Square\", \"SoHo-TriBeCa-Civic Center-Little Italy\",  \"Astoria\", \"Lower East Side\", \"Lower East Side\", \"East Village\",  \"Norwood\", \"Spuyten Duyvil-Kingsbridge\", \"Lenox Hill-Roosevelt Island\",  \"Steinway\", \"Astoria\", \"Astoria\", \"park-cemetery-etc-Brooklyn\",  \"Bushwick South\", \"Greenpoint\", \"park-cemetery-etc-Manhattan\",  \"Mott Haven-Port Morris\", \"Crotona Park East\", \"Van Cortlandt Village\",  \"Woodside\", \"Crown Heights North\", \"Windsor Terrace\", \"Hunters Point-Sunnyside-West Maspeth\",  \"Hudson Yards-Chelsea-Flatiron-Union Square\", \"North Side-South Side\",  \"Elmhurst\", \"Hunters Point-Sunnyside-West Maspeth\", \"Bellerose\",  \"Jackson Heights\", \"Brownsville\", \"Old Astoria\", \"Hammels-Arverne-Edgemere\",  \"Bushwick North\"), notes = c(\"No meat. No BPI-Certified Products.\",  \"No meat accepted.\", NA, \"No Meat, Fish, and Dairy. No BPI-Certified Compostable Plastic Products.\",  NA, \"No Meat, Fish, and Dairy. No BPI-Certified Compostable Plastic Products.\",  NA, \"No Meat, Fish, and Dairy. No BPI-Certified Compostable Plastic Products.\",  \"No Meat, Fish, and Dairy. No BPI-Certified Compostable Plastic Products\",  \"No Meat, Fish, and Dairy No BPI-Certified Compostable Plastic Products.\",  \"No Rice, Pasta, Bread, and Grains. No Meat, Fish, and Dairy. No BPI - Certified Products. Remove all plastic, stickers and zip ties before dropping off food scraps\",  \"Remove all plastic, stickers and zip ties before dropping off food scraps\",  \"No meat. No BPI Products.\", \"No meat. No BPI Products.\", \"No meat. No BPI products.\",  \"No Meat, Fish, and Dairy or BPI-Certified Compostable Plastic Products.\",  \"No Meat, Fish, and Dairy, or BPI-Certified Compostable Plastic Products.\",  \"No Meat, Fish, and Dairy, or BPI-Certified Compostable Plastic Products.\",  \"No meat or BPI Products.\", \"Meat and BPI certified items accepted.\",  \"No meat. No BPI certified Products.\", \"No meat. No BPI certified products.\",  \"No meat. No BPI-certified Products.\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", NA, \"No meat, fish, dairy. No BPI-certified Products.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, dairy\",  \"Not accepted: grains, bread, meat, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", NA, \"Not accepted: meat, bones, or dairy\",  NA, NA, NA, \"Not accepted: meat, bones, or dairy\", NA, \"Not accepted: meat, bones, or dairy,\",  \"Not accepted: meat, bones, or dairy\", NA, \"No meat, bones, or dairy.\",  \"Not accepted: meat, bones, or dairy. BPI Certified Products. Dog and cat feces.\",  NA, \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: grains, meat, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  NA, \"No meat, BPI Certified Products.¬†Remove all plastic, stickers and zip ties before dropping off food scraps.\",  \"No meat, dairy, fish. No BPI certified products.\", \"No meat, dairy, fish. No BPI-certified products.\",  \"No meat or BPI- Certified Products.\", \"Not accepted: meat, bones, or dairy\",  \"No Dried Flowers and Houseplants. No Bread, Grains, Pasta. No Meat, Fish, and Dairy. No BPI-Certified Compostable Plastic Products\",  \"No meat, fish, dairy. No BPI Certified Products.\", \"No meat, fish, dairy. No BPI Certified Products.\",  \"Not accepted: meat, bones, dairy, or oil\", \"No Meat, fish, bones, dairy products, animal waste, compostable cutlery, compostable containers and plates, and other compostable products.¬†This site has specific instructions. Please carefully read instructions here: https://bit.ly/laplazadropoff\",  \"No meat, fish, dairy. No BPI Certified Products.\", \"No Meat, dairy, fish. No BPI Certified Products.\",  \"No meat, fish, dairy. No BPI-Certified Products.\", \"No meat, fish, or Dairy. No BPI-Certified Plastic Products.\",  \"No Meat, Bones, Dairy. No BPI-Certified Plastic Products.\",  \"No meat, dairy, fish. No BPI Plastic Products accepted.\", \"Remove all plastic, stickers, and zip ties before dropping off food scraps\",  \"We accept potted plants, clippings and flowers but please keep them separate from food scraps.\",  \"No meat, fish, or dairy accepted.\", \"No meat, dairy, or fish.\",  \"No meat, fat, rice, grain, or pasta accepted.\", \"No meat, bones, or dairy accepted.\",  \"Meat, bones, and dairy not accepted.\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Site entrance is on the Goulden Ave side of campus\",  \"Remove all plastic, stickers and zip ties before dropping off food scraps. Not accepted: grains, dairy, or meat\",  \"Not accepted: meat, bones, or dairy\", \"Compost volunteer workdays are every Friday 3pm-6pm. To volunteer, email¬†flosparks0306@gmail.com.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: Meat, bones, or dairy. Bin will be placed near the front entrance a mask must be worn when entering the Garden.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Drop items inside the blue barrel located in the garden. Remove all plastic, stickers, & ties. before dropping off food scraps.¬†Not accepted: grains, meat, bones, or dairy.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, dairy\", \"Visit bit.ly/StVartanCompost or email CompostStVartan@gmail.com to volunteer. Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: cooked foods, bread, grains, meat, or dairy\",  \"Not accepted: cooked foods, bread, grains, meat, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"WEATHER¬†PERMITTING! Check IG/FB for weekend updates.¬† Please DO NOT leave bags of food scraps¬†by gate when the¬†garden is closed.¬† Remember to remove produce stickers.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: grains, bread, meat, bones, or dairy\",  \"Garden staff will be available for questions or concerns from 10am-6pm.\",  \"Not accepted: grains, bread, meat, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, dairy, bread, or grains.\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy.\", \"Not accepted: meat, bones, or dairy\",  \"Only accepting fruits, vegetables, coffee, tea, and nuts\", \"Bring food scraps inside the garden to place in the compost tumbler. Not accepted: meat, bones, or dairy.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, dairy, or oil\", \"Not accepting: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy.\", NA, \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy. Closed on all federal holidays. Drop off directly in the pallet compost bin inside the garden.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy. Enter through rear gate to drop off food scraps in brown bins\",  \"Not accepted: meat, bones, or dairy\", \"Not Accepted: meat, bones, or dairy\",  NA, NA, \"Please¬†register to participate at bit.ly/HKcompost Setup is inside the park gate, under the mosaic panels, to the right of the park house door. Lids must remain closed and all food scraps must be placed INSIDE the bins\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  NA, \"Not accepted: meat, bones, or dairy. Visit the Center Farm stand to drop off your food scraps.\",  \"Not accepted: meat, bones, dairy. Bin will be placed at the side entrance on 182nd. Mask must be worn when entering the garden.\",  \"Not accepted: meat, bones, dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy. Please chop and freeze your scraps when possible. Be prepared to empty your food¬† scraps into a bin. Try and bring your scraps in a brown paper bag instead of plastic.\",  \"Accepted: All organics except pet waste\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, dairy, or oil\", NA, \"Not accepted: meat, bones, dairy, or oil\",  \"Not accepted: Meat, bones, dairy, or oil\", \"Accepted: All organics except pet waste\",  \"Accepted: All organics except pet waste\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  NA, \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"There will be a wheelbarrow/table in the upper garden for collection. Not accepted: meat, bones, dairy, or grains.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy.\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: Meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Not accepted: meat, bones, or dairy\",  \"Not accepted: meat, bones, or dairy\", \"Donation: 25 cents per pound. Drop off location is by Bx7, Bx10, BX1 bus stop.\",  \"Not accepted: meat, bones, and dairy\", \"Not accepted: meat, bones, dairy, or oil.\",  \"Not accepted: meat, bones, dairy, or oil\", \"Not accepted: meat, bones, dairy, or oil\",  \"Not accepted: Meat, bones, dairy, or oil\", \"Not accpepted: meat, dairy, oil, or pet waste\",  \"No oil\", \"Accepted: All organics except pet waste\", NA, NA,  \"No drop-offs on Holidays when campus is closed\", \"Not accepted: meat, bones, or dairy\",  \"No potting soil, meat, or dairy\", NA, NA, \"Not accepted: meat, bones, or dairy\",  \"Accepting fruit, vegetables, Gound coffee, and bread. Currently not accepting fish & meat, citrus, compostable cutlery, sauces & oils.\",  NA, NA, \"Check Calendar of Events at queensfarm.org for dates when admission is charged (and compost site is not accessible without a ticket).¬†*Farm-wide admission is charged for weekend events on 10-12 days each calendar year. Also, stop by the Farm Store to fi\",  NA, NA, NA, NA, NA), object_id = c(\"208\", \"207\", \"206\", \"205\",  \"204\", \"203\", \"202\", \"201\", \"200\", \"199\", \"198\", \"197\", \"196\",  \"195\", \"194\", \"193\", \"192\", \"191\", \"190\", \"189\", \"188\", \"187\",  \"186\", \"185\", \"184\", \"183\", \"182\", \"181\", \"180\", \"179\", \"178\",  \"177\", \"176\", \"175\", \"174\", \"173\", \"172\", \"171\", \"170\", \"169\",  \"168\", \"167\", \"166\", \"165\", \"164\", \"163\", \"162\", \"161\", \"160\",  \"159\", \"158\", \"157\", \"156\", \"155\", \"154\", \"153\", \"152\", \"151\",  \"150\", \"149\", \"148\", \"147\", \"146\", \"145\", \"144\", \"143\", \"142\",  \"141\", \"140\", \"139\", \"138\", \"137\", \"136\", \"135\", \"134\", \"133\",  \"132\", \"131\", \"130\", \"129\", \"128\", \"127\", \"126\", \"125\", \"124\",  \"123\", \"122\", \"121\", \"120\", \"119\", \"118\", \"117\", \"116\", \"115\",  \"114\", \"113\", \"112\", \"111\", \"110\", \"109\", \"108\", \"107\", \"106\",  \"105\", \"104\", \"103\", \"102\", \"101\", \"100\", \"99\", \"98\", \"97\", \"96\",  \"95\", \"94\", \"93\", \"92\", \"91\", \"90\", \"89\", \"88\", \"87\", \"86\", \"85\",  \"84\", \"83\", \"82\", \"81\", \"80\", \"79\", \"78\", \"77\", \"76\", \"75\", \"74\",  \"73\", \"72\", \"71\", \"70\", \"69\", \"68\", \"67\", \"66\", \"65\", \"64\", \"63\",  \"62\", \"61\", \"60\", \"59\", \"58\", \"57\", \"56\", \"55\", \"54\", \"53\", \"52\",  \"51\", \"50\", \"49\", \"48\", \"47\", \"46\", \"45\", \"44\", \"43\", \"42\", \"41\",  \"40\", \"39\", \"38\", \"37\", \"36\", \"35\", \"34\", \"33\", \"32\", \"31\", \"30\",  \"29\", \"28\", \"27\", \"26\", \"25\", \"24\", \"23\", \"22\", \"21\", \"20\", \"19\",  \"18\", \"17\", \"16\", \"15\", \"14\", \"13\", \"12\", \"11\", \"10\", \"9\", \"8\",  \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"), operation_day_hours = c(\"Mondays, 12-2PM\",  \"Thursdays 10AM-12PM\", \"Saturdays 10AM-12PM\", \"Thursdays, 10AM-1PM\",  \"Sundays, 9AM-1PM\", \"Saturdays, 8AM-2PM\", \"Thursdays, 9AM-2PM\",  \"Thursday, 7:00AM-12:30PM\", \"Thursdays, 7:30-12PM\", \"Thursdays,¬†8:00 - 11:00 AM\",  \"Saturdays, 10:30AM-1PM\", \"Fridays 8 AM - 12 PM\", \"Saturday + Sunday 2-5pm\",  \"Wednesdays 8:00 AM to 12:30 PM\", \"Wednesdays 8 AM to 1 PM\",  \"Saturdays 8:30 AM 11:30 AM\", \"Saturdays 8:00 AM 12:30 PM\", \"Saturdays 8:00 AM 12:00 PM\",  \"Sundays 2-5PM (March-Nov.)\\\\ 1-4PM (Dec.-Feb.)\", \"Everyday, 24/7\",  \"Fridays\\t8:00 AM - 1:00 PM\", \"Fridays\\t8:00 AM-12:00 PM\", \"Fridays\\t11:00 AM - 2:00 PM\",  \"Fridays 10:30 AM - 2:30 PM\", \"Thursdays 4 PM - 5:30 PM\", \"Tuesdays\\t9:00 AM - 12:00 PM\",  \"Saturdays 10:30 AM - 12:30 PM\", \"Wednesdays 9 AM - 12 PM\", \"Wednesdays 10 AM - 1 PM\",  \"Mondays & Wednesdays 12 PM - 5 PM\", \"Wednesdays 10 AM - 2 PM\",  \"Wednesdays 10 AM - 2 PM\", \"Tuesdays\\t10:00 AM\\t2:00 PM\", \"Wednesdays 10 AM - 2 PM\",  \"Tuesdays\\t10:00 AM- 2:00 PM\", \"Tuesdays 10AM-2PM\", \"Wednesday 10:00 AM- 2:00 PM\",  \"Wednesdays 10 AM - 2 PM\", \"24/7 Drop off\", \"Sundays,¬†9:00 - 10:30 AM\",  \"Thursdays 9 AM - 2 PM\", \"Wednesdays, 2 PM - 7 PM\", \"Tuesdays\\t12:00 PM- 2:00 PM\",  \"24/7\", \"Wednesdays, 3:30-5PM\", \"Mondays 12 PM - 2 PM\", \"Mondays 12 PM - 2 PM\",  \"Tuesdays and Thursdays 2:30 PM - 4 PM\", \"Fridays,10:00 AM - 1:00 PM\",  \"Fridays, 9 AM - 2PM\", \"Sundays 10 am - 3 pm\", \"Fridays 4:00 PM - 5:30 PM\",  \"Thursdays, 1-6PM\", \"Sundays 9AM-1PM, Mondays 1PM - 7PM\", \"Mondays, 8AM-11AM\",  \"Saturdays, 9:30AM-1:30PM\", \"Thursdays 9:30 AM - 12:30 PM\", \"Wednesdays, 10AM-1PM\",  \"Thursdays, 9AM-1PM\", \"Sundays, 9:00AM-1:00PM\", \"Every day 9:00AM - dusk\",  \"Saturday and Sunday, 10AM-Dusk\", \"Saturdays, 9:00AM-1:00PM\",  \"Sundays, 8:00AM-12:00PM\", \"Saturdays, 8:00AM-12:00PM\", \"Thursdays, 8:30-11:30AM\",  \"Thursdays, 8-11AM\", \"Sunday, 11:30AM-1:00PM\", \"Wednesday, 2:30-5:00pm\",  \"Tuesday: 1:30 to 3:30pm\", \"CLOSED FOR THE SEASON\", \"Fridays and Saturdays 9 AM - 2 PM\",  \"Saturday 9:30am-2pm\", \"Saturdays, 8:30am-1pm\", \"Sundays, 10AM-3PM\",  \"Sundays 10:30AM-1:00PM\", \"CLOSED FOR SEASON\", \"Wednesdays 10 AM - 2 PM\",  \"Tuesdays 10:00 AM - 2:00 PM\", \"Tuesdays 10 AM - 2 PM\", \"Sundays 9:00AM - 1:00PM\",  \"Saturdays 10 am - 2 pm\", \"Closed for the Season\", \"Fridays 9 AM - 11 AM\",  \"24/7\", \"CLOSED FOR SEASON\", \"Closed for Season\", \"24/7\", \"Mondays 9 AM - 12 PM\",  \"24/7 Drop Off\", \"Mondays - Fridays 9 AM - 3 PM\", \"Wednesdays 4 PM - 5 PM\",  \"24/7\", \"24/7\", \"Sundays 11 AM - 4 PM\", \"Saturdays 10 AM - 4 PM\",  \"Summer (July-August) Monday - Friday (9am - 4pm) Sunday (10am -2pm) 2 Saturdays a month (1-3pm)\",  \"Sunday 8:30 AM - 11:30 AM\", \"24/7\", \"24/7\", \"24/7\", \"Saturdays 11:00 AM - 1:30 PM\",  \"Saturdays 10:00AM - 11:00AM\", \"Sundays 11:30 AM - 12:30PM\",  \"Tuesdays 4 PM - 7 PM\", \"Saturdays 11:00AM - 1:00PM\", \"Fridays 7:30AM - 11:30AM\",  \"Fridays 9:00AM - 10:00AM\", \"24/7\", \"Saturdays 10:00AM - 2:00PM\",  \"Fridays 8:00AM - 12:00PM; Saturdays 12:00PM - 12:30PM\", \"Tuesdays 9:00AM - 11:00AM; Saturdays 12:00PM - 3:00PM\",  \"Wednesdays 7:30 AM - 10:30 AM\", \"Fridays 10:00AM - 4:00PM; Saturdays 9:30AM - 2:30PM\",  \"Saturdays 9:30 AM - 2:00PM\", \"Sundays from 9:00AM-10:00AM; Wednesdays from 7:00PM-8:00PM\",  \"Sunday: 3-4PM, Monday 1-2PM Tuesday 1-2PM, Wednesday 1-2PM, Friday: 8-9AM\",  \"Sundays 9:00 AM - 2:00 PM\", \"Saturdays 8:00AM - 12:00PM\", \"24/7\",  \"Saturdays & Sundays 11:00AM - 4:00PM\", \"Saturdays 9:00AM - 1:00PM\",  \"Everyday, Dawn-Dusk\", \"Fridays 8:00AM - 12:30 PM\", \"Tuesdays and Thursdays 9:00AM - 5:00PM\",  \"Mondays 10:00AM - 5:00PM\", \"Tuesdays 8:00AM - 11:00AM\", \"Fridays 8:00AM - 12:00PM\",  \"Fridays 9:00AM - 1:00PM\", \"Sundays 11:00AM - 2:00PM\", \"Thursdays 5:30PM - 8:30PM\",  \"Everyday, Dawn-Dusk\", \"Saturdays 10:00AM - 2:00PM\", \"Open during all park hours, typically dawn-dusk\",  \"Saturdays 9:00AM - 3:00PM\", \"Saturdays 12:00PM - 2:00PM\", \"Every day 8:00AM - 5:00PM\",  \"Wednesdays and Saturdays 10:30AM - 12:30PM\", \"Saturdays 8:00AM - 1:00PM\",  \"Thursdays 8 AM - 2 PM\", \"Closed for Season\", \"Mondays - Fridays 9:00AM - 5:00PM\",  \"Saturdays 8:00AM - 2:00PM\", \"Wednesdays 9:00AM - 2:00PM\", \"Sundays 8:00AM - 5:00PM\",  \"Saturdays 1:00PM - 3:00PM\", \"Tuesdays 8:00AM - 11:00 AM\", \"Wednesdays 8:00AM - 10:00AM; Saturdays 11:00AM - 1:00PM\",  \"Sundays 9:00AM - 1:00PM\", \"Every day 7:00AM - 7:00PM\", \"Every day 7:00AM - 7:00PM\",  \"Every day 7:00AM - 7:00PM\", \"24/7\", \"Wednesdays 5:00PM - 6:00PM; Saturdays 11:00AM - 12:00PM\",  \"Fridays + Saturdays all day; Sundays from dawn until 4:00PM\",  \"Mondays - Fridays 7:00AM - 5:00PM; Saturdays 7:00AM - 1:00PM\",  \"Check ferry schedule\", \"Saturdays and Sundays\", \"Sundays 8:00AM - 12:00PM\",  \"Sundays 9:00AM - 3:00PM\", \"Saturdays 9:00AM - 2:00PM\", \"Thursdays 9:00AM - 2:30PM\",  \"Wednesdays 9:00AM - 2:00PM\", \"Saturdays 8:00AM - 12:00PM\", \"Fridays 8:00AM - 12:00PM\",  \"Saturdays 8:00 AM - 12:00PM\", \"Saturdays 11:00AM - 3:00PM\",  \"Fridays 8:00 AM - 11:30 AM\", \"Wednesdays 12:00PM - 2:00PM\",  \"Every day 7:00 am - 7:00 pm\", \"Every day 7:00 am - 7:00 pm\",  \"Every day 7:00AM - 7:00PM\", \"Every day 7:00AM - 7:00PM\", \"Every day 7:00AM - 7:00PM\",  \"Every day 7:00AM - 7:00PM\", \"Every day 7:00 am - 7:00pm\", \"Wednesdays 9:00AM - 2:00PM\",  \"Fridays 10:00AM - 4:30PM\", \"Fridays 9:00AM - 2:00PM\", \"Mondays 9:00AM - 2:00PM\",  \"Mondays 9:00AM - 2:00PM\", \"Every day 9:00AM - 8:00PM\", \"Saturdays 10:00AM - 12:00PM\",  \"Saturdays 9:00AM - 2:00PM\", \"Saturdays 9:00AM - 3:45PM\", \"24/7\",  \"Saturdays 9:00AM - 3:00PM\", \"Sundays 9:00AM - 11:00AM\", \"Sundays 12:00PM - 3:00PM\",  \"Sundays 10:00AM - 1:00PM\", \"When the island is open to the public (Check ferry schedule)\",  \"Saturdays & Sundays from 10:00AM - 4:00PM\", \"Mondays, Wednesdays, and Fridays from 4:00PM - 7:00PM\",  \"Mondays 9:00AM - 12:00PM\", \"Saturdays 9:00AM - 12:00PM\", \"Saturdays and Sundays 12:00PM - 2:00PM\",  \"Wednesdays 4:30 PM-6:30 PM, Saturdays 10:00 AM-1:00 PM, Sundays 10:00 AM - 12 PM\",  \"Sundays\\t2:00 PM-5:00 PM (Switches to 4:00 PM Fall, Winter)\",  \"Mondays, Wednesdays, Fridays, & Saturdays, 8:00 AM-5:00 PM\",  \"Mondays 10:00 AM-12:00 PM, Thursdays 6:00 PM-8:00 PM\", \"Every day from 9:00AM - 6:00PM\",  \"Every Day, Dawn-Dusk\", \"Every Day 10:00 AM-04:00 PM\", \"Saturdays, 11:00 AM-01:00 PM\",  \"Fridays and Saturdays 9:00 AM-1:00 PM\", \"December-February: Saturdays & Sundays, 08:00 AM-08:00 PM;\",  \"Wednesdays-Fridays 10:00 AM-5:00 PM, Saturdays, 10:00 AM-3:00 PM\",  \"Saturdays, 10:00 AM-1:00 PM\"), open_months = c(\"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"December 4 - June 25\",  \"September - June\", \"January-December\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round (Seasonal hours)\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"September - June\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"April-November\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"July 14th - November 24th\", \"Year Round\", \"CLOSED FOR THE SEASON\",  \"Year Round\", \"April-October\", \"Spring-Dec 18 2021\", \"Year Round\",  \"Year Round\", \"CLOSED FOR SEASON\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Spring - Fall\", \"Closed for the Season\",  \"Year Round\", \"Everyday\", \"CLOSED FOR SEASON\", \"Closed for Season\",  \"June - November\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"April - December\", \"Year Round\",  \"Year Round\", \"Year Round\", \"April - October\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Seasonal (Closed 11/12/21)\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"May 1 - November 18\", \"Year Round (except February)\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round (Except February)\",  \"Year Round\", \"Year Round\", \"Year Round\", \"July- November 16 2021\",  \"Closed for Season\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"May 1- November 1\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"June 25 - November 19\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Seasonal\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"mid-March - end of January\",  \"Seasonal, April - November 21\", \"Year Round\", \"Year Round\",  \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\", \"Year Round\",  \"Seasonal, April-October\", \"Year Round\", \"Year Round\", \"Seasonal, May-November\" ), hosted_by = c(\"NYC Compost Project Hosted by Big Reuse\", \"Coastal Preservation Network\",  \"Rogers/Tilden/Veronica Place Garden\", \"GrowNYC\", \"GrowNYC and the Forest Hills Green Team\",  \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"New Settlement Community Center\",  \"Spuyten Duyvil PreSchool\", \"New Beginnings Community Garden\",  \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"BK Rot\",  \"Old Stone House Brooklyn\", \"GrowNYC\", \"GrowNYC\", \"GrowNYC\",  \"Snug Harbor Youth\", \"Snug Harbor Youth\", \"Astoria Pug\", \"Moffat St Community Garden\",  \"GrowNYC\", \"GrowNYC\", \"Padre Plaza Community Garden\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"NYC Compost Project Hosted by LES Ecology Center\", \"NYC¬† Compost Project Hosted by LES Ecology Center\",  \"NYC Compost Project Hosted by LES Ecology Center\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"NYC Compost Project Hosted by LES Ecology Center\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"NYC Compost Project Hosted by LES Ecology Center\", \"Morris-Jumel Community Garden\",  \"Snug Harbor Youth Volunteers\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"Uptown Grand Central\", \"NYC Compost Project Hosted by Big Reuse\",  \"Maggie's Magic Garden\", \"Snug Harbor Youth\", \"Snug Harbor Youth\",  \"Snug Harbor Youth\", \"Wagner College\", \"GrowNYC\", \"GrowNYC\",  \"NYC Compost Project Hosted by Big Reuse\", \"Snug Harbor Youth\",  \"Riverdale Neighborhood House\", \"Farm to People\", \"Astoria Pug\",  \"GrowNYC\", \"GrowNYC\", \"Carver Community Garden\", \"GrowNYC\", \"GrowNYC\",  \"Socrates Sculpture Park\", \"La Plaza Cultural Community Garden\",  \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"North Brooklyn Compost Project\",  \"New Settlement's Community Food Action Program\", \"Down to Earth Garden\",  \"New Roots Community Garden, Queens\", \"The Connected Chef\", \"St. Peter's Lutheran Church\",  \"GrowNYC\", \"Volunteers at 1100 Bergen Street Community Garden\",  \"Volunteers at 45th Street Composters\", \"Volunteers at Farmers Garden\",  \"NYC Compost Project Hosted by LES Ecology Center\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"NYC Compost Project Hosted by LES Ecology Center\", \"GrowNYC\",  \"Volunteers at James Baldwin Outdoor Learning Center\", \"Van Cortlandt Park Alliance\",  \"www.bronxriver.org\", \"Rodale Pleasant Park Community Garden\",  \"Volunteers at Briarwood CSA\", \"Volunteers at Garden of Happiness\",  \"East New York Farms\", \"Grace Foundation\", \"Maggie's Garden\",  \"Genovesi Environmental Study Center\", \"Volunteers at Einstein Community Garden\",  \"Harlem Grown\", \"Harlem Grown\", \"Los Colibr√≠es Community Garden\",  \"Alliance for Kips Bay with PS281 Green Team and PS116 PTA\",  \"Volunteers at Abib Newborn Learning Garden\", \"Kew Gardens CSA, sponsored by Kew Gardens Cinemas\",  \"Battery Park City Authority\", \"Battery Park City Authority\",  \"4th Avenue Presbyterian Church\", \"Staten Island Urban Center\",  \"H.E.A.L.T.H for Youths Skyline Community Garden\", \"Riverdale Y Sunday Market Volunteers\",  \"Northeast Bronx Farmers Market Project\", \"Jenny's Garden\", \"GrowNYC\",  \"Howard Garden\", \"Brotherhood Sister Sol\", \"Olivet Heavenly Harvest\",  \"St. Anastasia Roman Catholic Church\", \"9C Community Garden Composting\",  \"PS 90 Coney Island\", \"King Manor Museum\", \"Paradise Garden\",  \"Volunteers at Christ Church\", \"Lydia's Magic Garden\", \"Kehilat Sephardim Food Pantry\",  \"NYC Compost Project Hosted by Snug Harbor Cultural Center & Botanical Garden\",  \"Astoria Pug\", \"Volunteers at Glendale Community Garden\", \"Volunteers at Garden of Resilience\",  \"Volunteers at¬†Pleasant Village Community Garden\", \"GrowNYC\",  \"Plant Group\", \"Target Bronx Community Garden\", \"NYC Compost Project Hosted by Big Reuse\",  \"GrowNYC\", \"Staff at Praxis Housing\", \"Members of Vinegar Hill Community Garden\",  \"Volunteers at Farm Spot\", \"Staff at¬†Wyckoff Farmhouse Museum\",  \"Volunteers at Kelly Street Garden\", \"Mathews-Palmer Park\", \"Astoria Pug\",  \"The Compost Collective\", \"NYC Compost Project Hosted by Queens Botanical Garden\",  \"Maple Street Community Garden\", \"GrowNYC\", \"Volunteers at La Familia Verde Farmers Market\",  \"Volunteers at Garden of Youth\", \"Mary Mitchell Family & Youth Center\",  \"GrowNYC\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"NYC Compost Project Hosted by LES Ecology Center\", \"GreenFeen OrganiX\",  \"NYC Compost Project Hosted by Earth Matter NY\", \"Imani Community Garden\",  \"GrowNYC\", \"Staff at Hudson River Park\", \"Staff at Hudson River Park\",  \"Staff at Hudson River Park\", \"NYC Compost Project Hosted by Big Reuse\",  \"Prospect Farm\", \"Q Gardens\", \"Sure We Can\", \"NYC Compost Project Hosted by Earth Matter NY\",  \"NYC Compost Project Hosted by Earth Matter NY\", \"GrowNYC\", \"GrowNYC\",  \"GrowNYC\", \"NYC Compost Project Hosted by Snug Harbor Cultural Center & Botanical Garden\",  \"NYC Compost Project Hosted by LES Ecology Center\", \"GrowNYC\",  \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"GrowNYC\", \"Staff at¬†Kingsbridge Heights Community Center\",  \"Staff at Hudson River Park\", \"Staff at Hudson River Park\", \"Staff at Hudson River Park\",  \"Staff at Hudson River Park\", \"Staff at Hudson River Park\", \"Staff at Hudson River Park\",  \"Staff at Hudson River Park\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"Astoria Pug\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"NYC Compost Project Hosted by LES Ecology Center\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"Keepers House Edible Garden\", \"The Earth Ministry of The Church of The Mediator\",  \"Haki Compost Collective\", \"Astoria Pug\", \"Astoria Pug\", \"Astoria Pug\",  \"Nurture BK\", \"BK Rot\", \"North Brooklyn Compost\", \"NYC Compost Project Hosted by Earth Matter NY\",  \"Volunteers at Friends of Brook Park Community Garden\", \"Volunteers at Drew Gardens\",  \"Volunteers at Lehman College\", \"Members at Moore-Jackson Garden\",  \"Volunteers at Walt L. Shamel Community Garden\", \"Members at East 4th Street Community Garden\",  \"Volunteers at¬†Woodside Sunnyside Composting\", \"NYC Compost Project Hosted by LES Ecology Center\",  \"Staff at Domino Park\", \"Volunteers at St. James Compost\", \"Volunteers at Smiling Hogshead Ranch\",  \"Staff at Queens County Farm Museum\", \"Volunteers at JH Scraps\",  \"Volunteers at Isabahlia LOE Foundation\", \"Staff at Hellgate Farm\",  \"Volunteers at Edgemere Farm\", \"Volunteers at Bushwick Grows!\" ), website = c(\"https://www.bigreuse.org/service/compost/\", \"www.coastalpreservation.org\",  NA, \"grownyc.org/compost\", \"grownyc.org/compost\", \"grownyc.org/compost\",  \"grownyc.org/compost\", \"grownyc.org/compost\", \"grownyc.org/compost\",  \"grownyc.org/compost\", \"NewSettlement.org/food\", \"www.spuytenduyvilpreschool.org\",  NA, \"grownyc.org/compost\", \"grownyc.org/compost\", \"grownyc.org/compost\",  \"grownyc.org/compost\", \"grownyc.org/compost\", \"www.bkrot.org\",  \"https://theoldstonehouse.org/\", \"grownyc.org/compost\", \"grownyc.org/compost\",  \"grownyc.org/compost\", \"snug-harbor.org\", \"snug-harbor.org\",  \"https://www.instagram.com/astoriapug/?hl=en\", NA, \"grownyc.org/compost\",  \"grownyc.org/compost\", NA, \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/ NYC\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  NA, \"https://snug-harbor.org/\", \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  NA, \"https://www.bigreuse.org/\", NA, \"snug-harbor.org/\", \"https://snug-harbor.org/\",  \"https://snug-harbor.org/\", \"wagner.edu\", \"www.grownyc.org/compost\",  \"grownyc.org/compost\", \"bigreuse.org\", \"snug-harbor.org\", NA,  NA, NA, \"https://www.grownyc.org/compost\", \"grownyc.org/compost\",  NA, \"grownyc.org/compost\", \"grownyc.org/compost\", \"socratessculpturepark.org\",  \"www.laplazacultural.com\", \"https://www.grownyc.org/compost\",  \"https://www.grownyc.org/compost\", \"https://www.grownyc.org/compost\",  \"https://www.grownyc.org/compost\", \"https://www.grownyc.org/compost\",  \"nbkcompost.org\", \"www.newsettlement.org\", \"downtoearthgarden.org/\",  \"@newrootsqueens\", \"theconnectedchef.org\", \"themightystpeters.org\",  \"grownyc.org/compost\", \"https://bqlt.org/garden/1100-block-bergen-st-community-garden\",  \"https://linktr.ee/45thstreetcomposters\", NA, \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  NA, \"https://www.jamesbaldwinoutdoorlearningcenter.org/\", \"vancortlandt.org\",  \"Bronx River Alliance\", NA, \"www.briarwoodcsa.org\", \"http://www.lafamiliaverde.org/\",  \"https://ucceny.org/enyf/\", \"graceofny.org\", NA, \"https://www.schools.nyc.gov/learning/student-journey/experiential-learning/genovesi-environmental-study-center\",  NA, \"www.harlemgrown.org/volunteer\", \"www.harlemgrown.org/volunteer\",  \"https://www.facebook.com/jardin34/\", \"bit.ly/StVartanCompost\",  \"https://cityparksfoundation.org/learning-gardens/\", \"kewgardenscsa.org\",  \"https://bpca.ny.gov/nature-and-sustainability/sustainability/\",  \"https://bpca.ny.gov/nature-and-sustainability/sustainability/\",  NA, \"www.siurbancenter.org\", \"www.health4youths.org\", NA, \"https://www.facebook.com/northeastbronxcommunityfarmersmarket/\",  \"https://www.instagram.com/jennysgarden138/\", NA, NA, \"www.brotherhood-sistersol.org\",  \"olivetheavenlyharvest.com\", \"https://www.sta.nyc/\", \"https://www.instagram.com/lescompost/\",  NA, \"https://www.kingmanor.org/\", NA, \"www.christchurchcobblehill.net\",  \"https://www.facebook.com/lydiasmagicgarden/\", NA, \"https://snug-harbor.org/compost/\",  \"https://www.instagram.com/astoriapug/?hl=en\", NA, \"http://www.laurelton.nyc/resilience\",  \"http://facebook.com/pleasantvillagecommunitygarden\", \"https://www.grownyc.org/greenmarket/manhattan/west-97\",  \"www.plantgroupnyc.com\", \"www.targetbronxcommunitygarden.org\",  \"https://www.bigreuse.org/service/compost/\", \"grownyc.org/compost\",  \"https://www.praxishousing.org\", \"https://groundcycle.org/\",  \"Farmspot.org\", \"Wyckoff Farmhouse Museum\", \"https://www.facebook.com/kellyst.garden/\",  NA, \"https://www.instagram.com/astoriapug/?hl=en\", \"https://www.facebook.com/pg/thecompostcollective/about/?ref=page_internal\",  NA, \"www.maplestreetcommunitygarden.com\", NA, \"http://www.lafamiliaverde.org/\",  NA, \"http://themarymitchellfyc.org/\", NA, \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.facebook.com/holisticsynergi/\", NA, \"https://www.facebook.com/Imani-Garden-168006109999475/\",  NA, \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://www.bigreuse.org/service/compost/\", \"https://prospectfarm.org/composting/\",  \"https://qgardenscf.com/places-to-drop-off-your-compost/\", \"http://www.surewecan.org/composting\",  NA, NA, NA, NA, \"https://www.grownyc.org/greenmarket/brooklyn/fort-greene\",  \"Snug Harbor Cultural Center & Botanical Garden\", \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.grownyc.org/greenmarket/brooklyn/greenpoint-sa\",  \"https://www.grownyc.org/greenmarket/bronx/lincoln-hospital-fr\",  \"https://www.grownyc.org/greenmarket/manhattan/inwood\", \"https://www.grownyc.org/foodbox/Bed-Stuy\",  \"https://www.grownyc.org/greenmarket/bronx/fordham\", \"www.khcc-nyc.org\",  \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://hudsonriverpark.org/the-park/sustainability/community-compost-program/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.instagram.com/astoriapug/?hl=en\", \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"www.mpcbronx.org\", \"https://www.instagram.com/mediator_garden_and_composting/\",  \"https://www.instagram.com/hakicompost/\", \"https://www.instagram.com/astoriapug/?hl=en\",  \"https://www.instagram.com/astoriapug/?hl=en\", \"https://www.instagram.com/astoriapug/?hl=en\",  \"https://www.instagram.com/nurturebk_compost/\", \"BKrot.org\",  \"https://www.instagram.com/nbkcompost/?hl=en\", \"www.earthmatter.org\",  NA, \"https://www.facebook.com/drewgardens.educationalrecreational\",  NA, \"https://www.facebook.com/MooreJacksonNYC/\", \"https://www.facebook.com/WaltLShamelCommunityGarden/\",  \"https://eastfourthstreetgarden.tumblr.com/\", \"https://www.woodsidesunnysidecomposting.org/\",  \"https://www.lesecologycenter.org/programs/compost/compost-drop-off-locations/\",  \"http://www.dominopark.com/\", \"https://www.instagram.com/stjamescompost/\",  \"www.smilinghogsheadranch.org\", \"http://queensfarm.org/\", \"https://www.jhbg.org/2020/07/28/jh-scraps-reopens\",  \"http://www.isabahlialoeinc.org\", \"https://www.hellgatefarm.com/\",  \"http://www.edgemerefarm.org/\", \"https://www.riseboro.org\"),      borocd = c(\"412\", \"407\", \"317\", \"204\", \"406\", \"355\", \"207\",      \"112\", \"110\", \"107\", \"204\", \"208\", \"207\", \"106\", \"105\", \"312\",      \"310\", \"307\", \"304\", \"306\", \"404\", \"209\", \"203\", \"501\", \"502\",      \"402\", \"304\", \"201\", \"203\", \"201\", \"313\", \"315\", \"311\", \"315\",      \"311\", \"312\", \"313\", \"318\", \"112\", \"503\", \"103\", \"111\", \"402\",      \"111\", \"502\", \"503\", \"503\", \"501\", \"305\", \"309\", \"306\", \"501\",      \"208\", \"301\", \"401\", \"405\", \"409\", \"111\", \"304\", \"311\", \"401\",      \"103\", \"402\", \"109\", \"302\", \"308\", \"308\", \"301\", \"204\", \"103\",      \"402\", \"402\", \"413\", \"502\", \"308\", \"402\", \"316\", \"315\", \"311\",      \"312\", \"403\", \"207\", \"208\", \"209\", \"111\", \"408\", \"206\", \"305\",      \"502\", \"109\", \"318\", \"211\", \"110\", \"110\", \"307\", \"106\", \"316\",      \"409\", \"101\", \"101\", \"310\", \"501\", \"501\", \"208\", \"210\", \"109\",      \"108\", \"316\", \"109\", \"501\", \"411\", \"106\", \"313\", \"412\", \"412\",      \"306\", \"111\", \"408\", \"501\", \"401\", \"405\", \"413\", \"111\", \"107\",      \"110\", \"204\", \"401\", \"204\", \"212\", \"302\", \"403\", \"317\", \"202\",      \"104\", \"401\", \"406\", \"407\", \"309\", \"101\", \"206\", \"206\", \"206\",      \"102\", \"102\", \"103\", \"203\", \"101\", \"308\", \"314\", \"104\", \"104\",      \"102\", \"306\", \"307\", \"314\", \"301\", \"101\", \"101\", \"306\", \"107\",      \"302\", \"501\", \"104\", \"301\", \"201\", \"112\", \"303\", \"206\", \"208\",      \"104\", \"104\", \"102\", \"102\", \"101\", \"104\", \"104\", \"102\", \"401\",      \"103\", \"103\", \"103\", \"207\", \"208\", \"108\", \"401\", \"401\", \"401\",      \"355\", \"304\", \"301\", \"101\", \"201\", \"206\", \"207\", \"401\", \"308\",      \"307\", \"402\", \"105\", \"301\", \"404\", \"402\", \"413\", \"402\", \"316\",      \"401\", \"414\", \"304\"), point.type = c(\"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\", \"Point\",      \"Point\", \"Point\"), point.coordinates = list(c(-73.791315900001,      40.6944987000032), c(-73.8458402000009, 40.7859379000032),          c(-73.952623500001, 40.6472062000032), c(-73.918805000001,          40.8326800000032), c(-73.846381100001, 40.7218986000032         ), c(-73.969814000001, 40.6734380000032), c(-73.880346000001,          40.8820100000032), c(-73.938068000001, 40.8509470000032         ), c(-73.943764000001, 40.8236920000032), c(-73.981848000001,          40.7734040000032), c(-73.9163193000009, 40.8424593000032         ), c(-73.907270000001, 40.8792470000032), c(-73.900932000001,          40.8641760000032), c(-73.969036000001, 40.7526060000032         ), c(-73.9889690000009, 40.7416690000032), c(-73.980102000001,          40.6459580000032), c(-74.033703000001, 40.6174000000032         ), c(-74.002213000001, 40.6461520000032), c(-73.905049200001,          40.6840598000032), c(-73.984731000001, 40.6727118000032         ), c(-73.862513000001, 40.7497280000032), c(-73.862630000001,          40.8332100000032), c(-73.901845000001, 40.8206670000032         ), c(-74.131071000001, 40.6342030000032), c(-74.140879000001,          40.6056710000032), c(-73.9548600000009, 40.7477700000032         ), c(-73.910732600001, 40.6843646000032), c(-73.9159990000009,          40.8098940000032), c(-73.900567000001, 40.8311870000032         ), c(-73.917581000001, 40.8079687000032), c(-73.959167200001,          40.5780034000032), c(-73.955387400001, 40.5988666000032         ), c(-73.989452500001, 40.6200069000032), c(-73.957342200001,          40.6092700000032), c(-73.982115000001, 40.6130460000032         ), c(-73.980005000001, 40.6449690000032), c(-73.968194602001,          40.5761463810032), c(-73.905991200001, 40.6516767000032         ), c(-73.939190600001, 40.8359312000032), c(-74.194626000001,          40.5560140000032), c(-73.980547000001, 40.7121640000032         ), c(-73.939031500001, 40.8049824000032), c(-73.892547000001,          40.7427093000032), c(-73.949201200001, 40.7889577000032         ), c(-74.0967700000009, 40.5759040000032), c(-74.222539000001,          40.5307640000032), c(-74.216895000001, 40.5285010000032         ), c(-74.095028000001, 40.6134440000032), c(-73.876748000001,          40.6822990000032), c(-73.950915000001, 40.6646160000032         ), c(-73.9964010000009, 40.6720770000032), c(-74.119727000001,          40.6367580000032), c(-73.903936000001, 40.9032020000032         ), c(-73.926934800001, 40.7054315000032), c(-73.905338800001,          40.7724122000032), c(-73.906675000001, 40.7003000000032         ), c(-73.836079000001, 40.7076260000032), c(-73.934723000001,          40.8022230000032), c(-73.904826000001, 40.6887930000032         ), c(-73.999683000001, 40.6096440000032), c(-73.937000000001,          40.7683890000032), c(-73.978627800001, 40.7253498000032         ), c(-73.9219610000009, 40.7471090000032), c(-73.963963000001,          40.8076380000032), c(-73.990287000001, 40.6937800000032         ), c(-73.9577430000009, 40.6707450000032), c(-73.972226000001,          40.6774100000032), c(-73.960199700001, 40.7296982000032         ), c(-73.916636000001, 40.8400050000032), c(-73.979000000001,          40.7281000000032), c(-73.896200000001, 40.7432500000032         ), c(-73.956200000001, 40.7438700000032), c(-73.7574500000009,          40.6591400000032), c(-74.161931000001, 40.5837570000032         ), c(-73.949250000001, 40.6762900000032), c(-73.919118000001,          40.7461990000032), c(-73.9182300000009, 40.6746500000032         ), c(-73.970333000001, 40.5904440000032), c(-73.9938325000009,          40.6022147000032), c(-74.000556000001, 40.6365830000032         ), c(-73.8869990000009, 40.7536870000032), c(-73.888250000001,          40.8820700000032), c(-73.889859100001, 40.8845170000032         ), c(-73.8830803000009, 40.8328527000032), c(-73.9344142000009,          40.7942659000032), c(-73.819427100001, 40.7100076000032         ), c(-73.8849990000009, 40.8486130000032), c(-73.886680000001,          40.6654700000032), c(-74.132073400001, 40.5912110000032         ), c(-73.948116300001, 40.8285158000032), c(-73.9084944000009,          40.6221465000032), c(-73.8434618000009, 40.8532261000032         ), c(-73.9428691000009, 40.8138017000032), c(-73.946012900001,          40.8095063000032), c(-74.001848100001, 40.6547305000032         ), c(-73.973126000001, 40.7450610000032), c(-73.905910000001,          40.6595266000032), c(-73.829170000001, 40.7088800000032         ), c(-74.014878200001, 40.7183877000032), c(-74.017155700001,          40.7067584000032), c(-74.022767000001, 40.6355140000032         ), c(-74.076709100001, 40.6369271000032), c(-74.090286500001,          40.6399010000032), c(-73.9129160000009, 40.8918241000032         ), c(-73.8190803000009, 40.8139813000032), c(-73.956170000001,          40.8232250000032), c(-73.950833000001, 40.7857920000032         ), c(-73.9190362000009, 40.6636288000032), c(-73.950001700001,          40.8242350000032), c(-74.116160000001, 40.6303400000032         ), c(-73.7408196000009, 40.7657836000032), c(-73.9742968000009,          40.7288659000032), c(-73.979703000001, 40.5782545000032         ), c(-73.804450000001, 40.7021600000032), c(-73.803950000001,          40.6905600000032), c(-73.997010000001, 40.6859600000032         ), c(-73.9423200000009, 40.8001400000032), c(-73.811520000001,          40.7208700000032), c(-74.077928000001, 40.6419670000032         ), c(-73.921460000001, 40.7591400000032), c(-73.864884000001,          40.7075470000032), c(-73.766260000001, 40.6639200000032         ), c(-73.931720000001, 40.7966700000032), c(-73.969552000001,          40.7947170000032), c(-73.9408120000009, 40.8173130000032         ), c(-73.9272800000009, 40.8331600000032), c(-73.942283800001,          40.7536858000032), c(-73.925060000001, 40.8213500000032         ), c(-73.855940000001, 40.8968300000032), c(-73.982630000001,          40.7015010000032), c(-73.885483000001, 40.7540040000032         ), c(-73.920380000001, 40.6445100000032), c(-73.895674000001,          40.8201240000032), c(-73.992920000001, 40.7611300000032         ), c(-73.923020000001, 40.7753800000032), c(-73.8577800000009,          40.7164500000032), c(-73.8298100000009, 40.7515900000032         ), c(-73.952830000001, 40.6608500000032), c(-74.010793000001,          40.7174240000032), c(-73.894107000001, 40.8464680000032         ), c(-73.885159000001, 40.8493290000032), c(-73.887287000001,          40.8449010000032), c(-74.005095000001, 40.7374720000032         ), c(-74.002663000001, 40.7335360000032), c(-73.983207000001,          40.7259950000032), c(-73.8911400000009, 40.8291400000032         ), c(-74.013779400001, 40.7046367000032), c(-73.932950000001,          40.6762300000032), c(-73.966333000001, 40.6414380000032         ), c(-73.995372000001, 40.7710000000032), c(-74.008278000001,          40.7522220000032), c(-74.010722000001, 40.7342250000032         ), c(-73.991280000001, 40.6754100000032), c(-73.976444000001,          40.6541390000032), c(-73.963194000001, 40.6497780000032         ), c(-73.938820000001, 40.7054410000032), c(-74.019696000001,          40.6914030000032), c(-74.020114200001, 40.6871579000032         ), c(-73.995170000001, 40.6799540000032), c(-73.974657000001,          40.7800870000032), c(-73.973643000001, 40.6919560000032         ), c(-74.101268600001, 40.6416190000032), c(-73.998272000001,          40.7453310000032), c(-73.953394000001, 40.7197400000032         ), c(-73.924225000001, 40.8176850000032), c(-73.9207920000009,          40.8701060000032), c(-73.934810000001, 40.6813300000032         ), c(-73.8907830000009, 40.8611520000032), c(-73.9007090000009,          40.8772990000032), c(-74.0002500000009, 40.7634600000032         ), c(-74.006046000001, 40.7560320000032), c(-74.010454900001,          40.7382280000032), c(-74.011008700001, 40.7298117000032         ), c(-74.013015100001, 40.7202214000032), c(-74.007114200001,          40.7489842000032), c(-74.007838400001, 40.7428270000032         ), c(-74.003866000001, 40.7256282000032), c(-73.915111000001,          40.7626670000032), c(-73.9901630000009, 40.7142430000032         ), c(-73.986861000001, 40.7158890000032), c(-73.988622000001,          40.7231830000032), c(-73.875850000001, 40.8789600000032         ), c(-73.9068560000009, 40.8798490000032), c(-73.950139000001,          40.7618330000032), c(-73.9116110000009, 40.7741940000032         ), c(-73.915722000001, 40.7640560000032), c(-73.9256110000009,          40.7614720000032), c(-73.9620830000009, 40.6549170000032         ), c(-73.925806000001, 40.6976940000032), c(-73.943750000001,          40.7244930000032), c(-74.014830600001, 40.6928100000032         ), c(-73.918579700001, 40.8097074000032), c(-73.8791810000009,          40.8398970000032), c(-73.895344000001, 40.8738380000032         ), c(-73.907915000001, 40.7561490000032), c(-73.953657000001,          40.6774400000032), c(-73.977228700001, 40.6483066000032         ), c(-73.913690000001, 40.7501300000032), c(-73.989300000001,          40.7366100000032), c(-73.9680490000009, 40.7144480000032         ), c(-73.8777581000009, 40.7383320000032), c(-73.943133600001,          40.7432328000032), c(-73.7210020000009, 40.7484060000032         ), c(-73.896780000001, 40.7502780000032), c(-73.910283300001,          40.6674207000032), c(-73.9298265000009, 40.7690324000032         ), c(-73.7765544000009, 40.5950120000032), c(-73.913913000001,          40.6975230000032)), ct2010 = c(NA, NA, NA, NA, NA, NA,      NA, NA, NA, \"149\", NA, \"289\", \"265\", NA, NA, NA, NA, NA,      NA, NA, NA, \"72\", \"133\", \"207\", NA, \"1\", NA, \"41\", NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, \"24301\", \"17007\", NA, NA,      NA, NA, \"11202\", \"226\", \"20803\", NA, NA, NA, NA, \"13301\",      NA, NA, \"119\", NA, NA, \"194\", NA, NA, NA, \"2602\", NA, NA,      \"9\", NA, NA, NA, NA, \"34\", NA, NA, \"45\", NA, NA, NA, \"303\",      NA, NA, NA, \"285\", NA, \"281\", NA, NA, NA, NA, \"1124\", \"181\",      \"233\", NA, \"296\", \"226\", \"224\", NA, NA, NA, NA, NA, \"31704\",      NA, \"21\", \"77\", \"309\", NA, \"225\", NA, \"892\", NA, NA, NA,      NA, NA, NA, NA, \"67\", NA, NA, \"3\", NA, NA, NA, NA, \"181\",      NA, \"189\", NA, NA, \"418\", NA, \"283\", NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, \"77\", NA, NA, NA, NA, NA, \"520\",      NA, NA, \"75\", NA, NA, NA, NA, NA, \"5\", NA, NA, \"31\", NA,      NA, \"515\", NA, NA, \"273\", NA, NA, NA, NA, NA, \"69\", NA, NA,      NA, NA, \"149\", NA, NA, NA, \"423\", NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA), precinct = c(NA, NA, NA, NA, NA, NA,      NA, NA, NA, \"20\", NA, \"50\", \"52\", NA, NA, NA, NA, NA, NA,      NA, NA, \"43\", \"42\", \"121\", NA, \"108\", NA, \"40\", NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, \"33\", \"123\", NA, NA, NA, NA,      \"122\", \"123\", \"123\", NA, NA, NA, NA, \"120\", NA, NA, \"114\",      NA, NA, \"25\", NA, NA, NA, \"9\", NA, NA, \"84\", NA, NA, NA,      NA, \"9\", NA, NA, \"114\", NA, NA, NA, \"73\", NA, NA, NA, \"115\",      NA, \"50\", NA, NA, NA, NA, \"75\", \"122\", \"30\", NA, \"49\", \"32\",      \"28\", NA, NA, NA, NA, NA, \"1\", NA, \"120\", \"120\", \"50\", NA,      \"30\", NA, \"73\", NA, NA, NA, NA, NA, NA, NA, \"76\", NA, NA,      \"120\", NA, NA, NA, NA, \"24\", NA, \"44\", NA, NA, \"47\", NA,      \"115\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"6\", NA,      NA, NA, NA, NA, \"70\", NA, NA, \"6\", NA, NA, NA, NA, NA, \"1\",      NA, NA, \"88\", NA, NA, \"94\", NA, NA, \"81\", NA, NA, NA, NA,      NA, \"6\", NA, NA, NA, NA, \"114\", NA, NA, NA, \"52\", NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA), bbl = c(NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, \"2057090046\", \"2032010001\",      NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2026770090\", \"5010300069\",      NA, NA, NA, \"2022690021\", NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, \"1021100058\", NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, \"1017880030\", NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"4005290002\",      NA, NA, NA, \"3014460063\", NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, \"3040890025\", \"5009550100\", \"1020800058\", NA, \"2042050002\",      \"1019180046\", \"1019110048\", NA, NA, NA, NA, NA, \"1000167517\",      NA, \"5004980066\", NA, \"2059200456\", NA, NA, NA, \"3035500043\",      NA, NA, NA, NA, NA, NA, NA, \"3003240036\", NA, NA, NA, NA,      NA, NA, NA, NA, NA, \"2025080013\", NA, NA, \"2050390007\", NA,      \"4012540032\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      \"1006560001\", NA, NA, NA, NA, \"4006810001\", NA, NA, NA, \"2033430185\",      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), bin = c(NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2083194\", \"2000000\",      NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2005014\", \"5106982\",      NA, NA, NA, \"2090354\", NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, \"1000000\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, \"1000000\", NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, \"4467709\", NA, NA, NA,      \"3000000\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"3090717\",      \"5000000\", \"1000000\", NA, \"2102976\", \"1000000\", \"1000000\",      NA, NA, NA, NA, NA, \"1087842\", NA, \"5013259\", NA, \"2088698\",      NA, NA, NA, \"3000000\", NA, NA, NA, NA, NA, NA, NA, \"3003899\",      NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2000000\", NA, NA, \"2118535\",      NA, \"4028776\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      \"1000000\", NA, NA, NA, NA, \"4011271\", NA, NA, NA, \"2018218\",      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), census_code = c(\"360810254022006\",      \"360810929003000\", \"360470794002000\", \"360050181021002\",      \"360810711004000\", \"360470159005002\", \"360050421001000\",      \"360610273004001\", \"360610231003000\", \"360610149001000\",      \"360050209001004\", \"360050289003003\", \"360050265004001\",      \"360610090003001\", \"360610056002000\", \"360470498001002\",      \"360470054002000\", \"360470086001000\", \"360470407001000\",      \"360470135002000\", \"360810405011000\", \"360050216023004\",      \"360050133002004\", \"360850207023008\", \"360850189023005\",      \"360810001031002\", \"360470403002000\", \"360050041001001\",      \"360050149003000\", \"360050039001000\", \"360470610022001\",      \"360470580001002\", \"360470248001004\", \"360470552002001\",      \"360470432003000\", \"360470496002000\", \"360470360011001\",      \"360471098002000\", \"360610243012000\", \"360850170071000\",      \"360610002024002\", \"360610196003002\", \"360810483021000\",      \"360610166006000\", \"360850112031004\", \"360850226013001\",      \"360850226013002\", \"360850047001005\", \"360471178001004\",      \"360470319003001\", \"360470119021005\", \"360850133022002\",      \"360050337003008\", \"360470453001011\", \"360810121002001\",      \"360810551002004\", \"360810775002004\", \"360610194004000\",      \"360470411001002\", \"360470278001000\", \"360810037001001\",      \"360610026023000\", \"360810171011009\", \"360610203002001\",      \"360470011001003\", \"360470219003007\", \"360470163004000\",      \"360470565001003\", \"360050223002001\", \"360610028002001\",      \"360810263002005\", \"360810007011002\", \"360810690002010\",      \"360850277022016\", \"360470315002000\", \"360810183002000\",      \"360470303003003\", \"360470374024000\", \"360470290003000\",      \"360470116001000\", \"360810285001001\", \"360050409001001\",      \"360050281003002\", \"360050157001001\", \"360610178003006\",      \"360810220013009\", \"360050371001001\", \"360471124002004\",      \"360850181001002\", \"360610233002001\", \"360470696023008\",      \"360050296002001\", \"360610226001000\", \"360610224002001\",      \"360470084001000\", \"360610078005000\", \"360470920002001\",      \"360810136001000\", \"360610317031001\", \"360610317043008\",      \"360470126001007\", \"360850021002005\", \"360850081003012\",      \"360050309002008\", \"360050132003010\", \"360610225001003\",      \"360610158011000\", \"360470892004000\", \"360610229002001\",      \"360850105004005\", \"360811507012000\", \"360610044002002\",      \"360470350002001\", \"360810240002001\", \"360810198002005\",      \"360470067005000\", \"360610182002001\", \"360810779042002\",      \"360850003001004\", \"360810059001002\", \"360810637003000\",      \"360810320003000\", \"360610178003000\", \"360610185002000\",      \"360610230002001\", \"360050189002000\", \"360810033011010\",      \"360050059022001\", \"360050418002000\", \"360470021003013\",      \"360810283001001\", \"360470946003000\", \"360050087002002\",      \"360610121024000\", \"360810095002005\", \"360810703001001\",      \"360810797023000\", \"360470800002000\", \"360610039004000\",      \"360050395004000\", \"360050371001000\", \"360050371002001\",      \"360610077003006\", \"360610071005004\", \"360610032007001\",      \"360050125001000\", \"360610013002009\", \"360470309001006\",      \"360471522003009\", \"360610135025001\", \"360610099022001\",      \"360610075001003\", \"360470119021001\", \"360470502022004\",      \"360470506001001\", \"360470485001019\", \"360610005001003\",      \"360610005001020\", \"360470077004000\", \"360610165001001\",      \"360470031021000\", \"360850097021001\", \"360610091002000\",      \"360470519001000\", \"360050065001002\", \"360610297001003\",      \"360470273002000\", \"360050385001000\", \"360050277001001\",      \"360610129014000\", \"360610099032007\", \"360610079001005\",      \"360610069004001\", \"360610039002001\", \"360610099012007\",      \"360610099012014\", \"360610049002001\", \"360810149002001\",      \"360610006003002\", \"360610014011000\", \"360610036022003\",      \"360050423001001\", \"360050289003003\", \"360610238032000\",      \"360810115002002\", \"360810155002000\", \"360810059003001\",      \"360470177001012\", \"360470423001004\", \"360470591004000\",      \"360610005001001\", \"360050039004000\", \"360050060002000\",      \"360050409001006\", \"360810295002002\", \"360470221001003\",      \"360470500012004\", \"360810169001002\", \"360610052001004\",      \"360470551001003\", \"360810473002000\", \"360810001041006\",      \"360811567001000\", \"360810291001002\", \"360470924001005\",      \"360810079001004\", \"360810972041003\", \"360470433003002\"),      ct2010_2 = c(25402, 92900, 79400, 18102, 71100, 15900, 42100,      27300, 23100, 14900, 20900, 28900, 26500, 9000, 5600, 49800,      5400, 8600, 40700, 13500, 40501, 21602, 13300, 20702, 18902,      103, 40300, 4100, 14900, 3900, 61002, 58000, 24800, 55200,      43200, 49600, 36001, 109800, 24301, 17007, 202, 19600, 48302,      16600, 11203, 22601, 22601, 4700, 117800, 31900, 11902, 13302,      33700, 45300, 12100, 55100, 77500, 19400, 41100, 27800, 3700,      2602, 17101, 20300, 1100, 21900, 16300, 56500, 22300, 2800,      26300, 701, 69000, 27702, 31500, 18300, 30300, 37402, 29000,      11600, 28500, 40900, 28100, 15700, 17800, 22001, 37100, 112400,      18100, 23300, 69602, 29600, 22600, 22400, 8400, 7800, 92000,      13600, 31703, 31704, 12600, 2100, 8100, 30900, 13200, 22500,      15801, 89200, 22900, 10500, 150701, 4400, 35000, 24000, 19800,      6700, 18200, 77904, 300, 5900, 63700, 32000, 17800, 18500,      23000, 18900, 3301, 5902, 41800, 2100, 28300, 94600, 8700,      12102, 9500, 70300, 79702, 80000, 3900, 39500, 37100, 37100,      7700, 7100, 3200, 12500, 1300, 30900, 152200, 13502, 9902,      7500, 11902, 50202, 50600, 48500, 500, 500, 7700, 16500,      3102, 9702, 9100, 51900, 6500, 29700, 27300, 38500, 27700,      12901, 9903, 7900, 6900, 3900, 9901, 9901, 4900, 14900, 600,      1401, 3602, 42300, 28900, 23803, 11500, 15500, 5900, 17700,      42300, 59100, 500, 3900, 6000, 40900, 29500, 22100, 50001,      16900, 5200, 55100, 47300, 104, 156700, 29100, 92400, 7900,      97204, 43300), geometry = structure(list(structure(c(1042118.82011254,      192369.983331215), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1026940.43352588,      225652.820772782), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(997396.997264389,      175074.605221528), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1006719.0068889,      242655.476650337), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1026831.56239086,      202320.999133452), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(992623.33370491,      184629.471276479), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1017337.16984643,      260640.478065091), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1001383.67280868,      249306.472866242), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(999814.232525687,      239375.401509549), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(989277.659754409,      221049.253254889), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1007403.46816746,      246219.085326139), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1009893.11390411,      259624.781695709), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1011652.00360035,      254135.744913977), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(992828.948549992,      213472.85281162), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(987306.77304398,      209486.829224199), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(989771.806296451,      174616.923666626), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(974893.226031664,      164213.651549738), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(983635.881902306,      174686.983787186), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1010584.32628085,      188512.128410823), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(988485.533901099,      184363.822325705), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1022344.05755328,      212452.683274489), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1022263.94255761,      242867.968561099), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1011417.23233364,      238283.509081788), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(947870.669519855,      170360.848062462), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(945131.700624713,      159970.127623086), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(996757.487462529,      211712.648560187), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1009007.9393351,      188621.51837345), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1007503.46902348,      234354.447431323), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1011766.60491551,      242116.725565791), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1007066.19402333,      233652.576626077), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(995592.870665841,      149861.307530155), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(996638.983351829,      157462.808462359), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(987178.128693385,      165161.790073026), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(996094.286865324,      161252.764260983), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(989215.635728198,      162626.082304182), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(989798.806585354,      174256.61005169), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(993085.410418027,      149183.709876252), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1010335.72706367,      176713.773667579), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1001076.90002134,      243835.436308034), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(930167.433531588,      141907.46771261), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(989642.959735968,      198737.648196009), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1001128.77348121,      232559.702164313), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1014025.56194286,      209883.913552665), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(998316.737462418,      226719.551253248), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(957367.593876634,      149108.648998782), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(922387.629698523,      132726.791302525), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(923954.528991431,      131898.39469333), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(957866.352845673,      162784.888039316), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1018434.47924966,      187880.394759015), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(997867.552411904,      181417.739181714), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(985248.351671435,      184132.19796241), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(951020.51666563,      171287.195243817), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1010805.51070127,      268353.551566693), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1004507.92622238,      196292.645221186), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1010469.2212654,      220701.553219529), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1010127.11191994,      194428.422442978), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1029696.92486907,      197126.241405943), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1002322.30553203,      231555.215481312), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1010644.356524,      190236.637139846), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(984338.017151618,      161386.138384247), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1001700.77085547,      219227.875984612), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(990173.847900202,      203541.762940501), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1005873.42518328,      211478.234404458), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(994226.235666705,      233523.409266877), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(986943.479949756,      192039.358192884), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(995972.197135177,      183649.719360864), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(991953.807090141,      186076.363148981), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(995280.943644198,      205127.803483422), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1007316.69199907,      245324.808789383), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(990070.44301247,      204543.721153413), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1013013.07128239,      210079.687045136), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(996386.907906181,      210291.565458329), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1051545.5983145,      179512.031786844), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(939271.375353798,      151996.417336958), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(998327.005847984,      185671.171517173), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1006661.48333881,      211147.406968646), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1006931.87135564,      185080.181273465), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(992489.608126093,      154392.481569), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(985962.637833281,      158679.512613178), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(984095.685209372,      171200.729645548), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1015557.76982409,      213885.373480924), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1015151.49966015,      260659.45156497), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1014705.42497025,      261550.427696334), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1016604.97656103,      242729.577005812), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1002409.96911314,      228656.231193315), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1034311.85174299,      198003.006358508), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1016066.48009362,      248470.936138298), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1015687.72910071,      181745.394835734), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(947568.833412525,      154698.176538124), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(998608.621525782,      241132.144286819), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1009652.37365555,      165954.394424013), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1027555.25733641,      250169.472806745), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1000064.26083074,      235772.169508121), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(999194.998073934,      234206.650516029), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(983737.209338145,      177812.365404053), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(991696.608237149,      210723.592734786), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1010355.18665718,      179573.732796739), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1031611.54449802,      197586.770565093), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(980125.698250215,      201004.883154976), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(979493.535564546,      196768.091894642), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(977931.041224147,      170812.084784161), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(962959.91698927,      171335.415966416), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(959192.720989576,      172422.479627732), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1008327.24090718,      264205.521560166), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1034329.76021612,      235884.163537089), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(996380.754633377,      239203.295301835), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(997865.521802126,      225565.920680497), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1006711.95391547,      181064.639654194), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(998087.734336972,      239572.189289372), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(952007.414034889,      168947.614435345), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1056044.73810895,      218378.579435576), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(991373.918604506,      204823.109844016), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(989888.246376542,      149950.799019989), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1038470.46408135,      195152.81155768), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1038618.55829325,      190926.909008322), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(985079.244274335,      189190.1681109), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1000219.53328636,      230794.829624689), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1036495.48977477,      201965.118394228), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(962623.253257937,      173171.886052262), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1006008.31459268,      215861.639564901), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1021710.82031483,      197083.827902165), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1049096.61917083,      181246.868270875), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1003155.27985019,      229532.698006252), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(992680.651655716,      228815.249396286), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1000632.81702931,      237051.839852504), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1004373.58444899,      242828.297900656), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1000240.70723001,      213870.010656574), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1004991.59923583,      238526.002196685), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1024077.12241057,      266050.156955143), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(989066.259509716,      194852.675449954), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1015977.63770694,      214001.412220153), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1006345.47199392,      174098.792173179), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1013125.46972009,      238087.648706293), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(986211.34817139,      216576.986706795), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1005570.94076246,      221778.023744563), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1023675.13160572,      200330.57424187), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1031403.87657028,      213146.981852372), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(997337.016718721,      180045.387961279), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(981258.090190888,      200653.611828875), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1013547.58279352,      247686.254895913), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1016021.87209859,      248731.743798928), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1015435.21651568,      247117.69261177), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(982838.048248406,      207957.577776908), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(983511.972594612,      206523.539272746), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(988904.561301688,      203776.552783987), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1014376.31259779,      241374.030436899), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(980429.5023081,      195994.927637112), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1002848.30644141,      185652.351896162), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(993593.413574814,      172971.332716419), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(985531.889018484,      220172.908699341), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(981956.467289602,      213331.541313073), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(981278.521216818,      206774.734235897), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(986668.780637872,      185346.604901662), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(990786.120223209,      177597.738968354), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(994463.28588823,      176010.173062573), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1001212.65517118,      196293.581309232), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(978787.972606865,      191173.811949745), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(978671.643678707,      189627.224267447), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(985589.669095084,      187002.031165394), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(991268.686285854,      223484.589433793), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(991559.172473883,      191375.771644554), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(956145.575552674,      173051.725775373), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(984728.815475394,      210820.824813544), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(997169.123224072,      201500.654043611), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1005223.86228217,      237190.909645849), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1006156.81680575,      256290.68502763), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1002330.99758022,      187510.03869034), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1014460.56827611,      253037.322628826), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1011708.26541972,      258917.036766276), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(984180.74577818,      217425.803120222), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(982574.96911328,      214719.59731188), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(981352.718969637,      208233.144292881), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(981198.863543256,      205166.84081054), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(980642.256930897,      201672.874055534), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(982278.81813486,      212151.878040846), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(982077.958171126,      209908.630175266), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(983178.444403022,      203642.49366959), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1007765.96284773,      217148.281488801), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(986977.028766122,      199494.645330979), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(987892.324496173,      200094.453303656), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(987403.804165144,      202751.812899134), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1018581.99463462,      259530.97237681), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1010007.36623431,      259844.235665878), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(998062.675679999,      216836.964557618), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1008731.29539492,      221348.907082214), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1007596.21671047,      217654.176248515), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1004857.6218335,      216710.259431385), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(994770.76649788,      177882.584107602), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1004823.28287712,      193473.907372118), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(999841.315300488,      203233.887466328), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(980137.315475843,      191686.157465408), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1006789.13345791,      234285.787902693), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1017680.48224648,      245297.53896772), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1013193.42632955,      257657.785279107), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1009761.89546661,      214775.575872805), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(997104.373180147,      186089.47198729), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(990568.940668431,      175472.777222218), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1008164.10885902,      212581.031169112), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(987215.275596803,      207643.664025714), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(993107.479554255,      199570.795325588), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1018125.8353556,      208294.498743439), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1000007.73609767,      210061.493667998), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1061554.49551862,      212064.2490249), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1012849.33565799,      212640.02097398), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1009138.87327416,      182448.500775003), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1003687.61607487,      219463.798335023), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1046304.6829219,      156134.47004726), class = c(\"XY\", \"POINT\", \"sfg\")), structure(c(1008121.15767224,      193414.624123281), class = c(\"XY\", \"POINT\", \"sfg\"))), n_empty = 0L, crs = structure(list(         input = \"EPSG:2263\", wkt = \"PROJCRS[\\\"NAD83 / New York Long Island (ftUS)\\\",\\n    BASEGEOGCRS[\\\"NAD83\\\",\\n        DATUM[\\\"North American Datum 1983\\\",\\n            ELLIPSOID[\\\"GRS 1980\\\",6378137,298.257222101,\\n                LENGTHUNIT[\\\"metre\\\",1]]],\\n        PRIMEM[\\\"Greenwich\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        ID[\\\"EPSG\\\",4269]],\\n    CONVERSION[\\\"SPCS83 New York Long Island zone (US Survey feet)\\\",\\n        METHOD[\\\"Lambert Conic Conformal (2SP)\\\",\\n            ID[\\\"EPSG\\\",9802]],\\n        PARAMETER[\\\"Latitude of false origin\\\",40.1666666666667,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8821]],\\n        PARAMETER[\\\"Longitude of false origin\\\",-74,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8822]],\\n        PARAMETER[\\\"Latitude of 1st standard parallel\\\",41.0333333333333,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8823]],\\n        PARAMETER[\\\"Latitude of 2nd standard parallel\\\",40.6666666666667,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8824]],\\n        PARAMETER[\\\"Easting at false origin\\\",984250,\\n            LENGTHUNIT[\\\"US survey foot\\\",0.304800609601219],\\n            ID[\\\"EPSG\\\",8826]],\\n        PARAMETER[\\\"Northing at false origin\\\",0,\\n            LENGTHUNIT[\\\"US survey foot\\\",0.304800609601219],\\n            ID[\\\"EPSG\\\",8827]]],\\n    CS[Cartesian,2],\\n        AXIS[\\\"easting (X)\\\",east,\\n            ORDER[1],\\n            LENGTHUNIT[\\\"US survey foot\\\",0.304800609601219]],\\n        AXIS[\\\"northing (Y)\\\",north,\\n            ORDER[2],\\n            LENGTHUNIT[\\\"US survey foot\\\",0.304800609601219]],\\n    USAGE[\\n        SCOPE[\\\"Engineering survey, topographic mapping.\\\"],\\n        AREA[\\\"United States (USA) - New York - counties of Bronx; Kings; Nassau; New York; Queens; Richmond; Suffolk.\\\"],\\n        BBOX[40.47,-74.26,41.3,-71.8]],\\n    ID[\\\"EPSG\\\",2263]]\"), class = \"crs\"), class = c(\"sfc_POINT\",      \"sfc\"), precision = 0, bbox = structure(c(xmin = 922387.629698523,      ymin = 131898.39469333, xmax = 1061554.49551862, ymax = 268353.551566693     ), class = \"bbox\")), county_code = c(81, 81, 47, 5, 81, 47,      5, 61, 61, 61, 5, 5, 5, 61, 61, 47, 47, 47, 47, 47, 81, 5,      5, 85, 85, 81, 47, 5, 5, 5, 47, 47, 47, 47, 47, 47, 47, 47,      61, 85, 61, 61, 81, 61, 85, 85, 85, 85, 47, 47, 47, 85, 5,      47, 81, 81, 81, 61, 47, 47, 81, 61, 81, 61, 47, 47, 47, 47,      5, 61, 81, 81, 81, 85, 47, 81, 47, 47, 47, 47, 81, 5, 5,      5, 61, 81, 5, 47, 85, 61, 47, 5, 61, 61, 47, 61, 47, 81,      61, 61, 47, 85, 85, 5, 5, 61, 61, 47, 61, 85, 81, 61, 47,      81, 81, 47, 61, 81, 85, 81, 81, 81, 61, 61, 61, 5, 81, 5,      5, 47, 81, 47, 5, 61, 81, 81, 81, 47, 61, 5, 5, 5, 61, 61,      61, 5, 61, 47, 47, 61, 61, 61, 47, 47, 47, 47, 61, 61, 47,      61, 47, 85, 61, 47, 5, 61, 47, 5, 5, 61, 61, 61, 61, 61,      61, 61, 61, 81, 61, 61, 61, 5, 5, 61, 81, 81, 81, 47, 47,      47, 61, 5, 5, 5, 81, 47, 47, 81, 61, 47, 81, 81, 81, 81,      47, 81, 81, 47)), row.names = c(NA, 208L), sf_column = \"geometry\", agr = structure(c(borough = NA_integer_,  councildist = NA_integer_, food_scrap_drop_off_site = NA_integer_,  location = NA_integer_, ntaname = NA_integer_, notes = NA_integer_,  object_id = NA_integer_, operation_day_hours = NA_integer_, open_months = NA_integer_,  hosted_by = NA_integer_, website = NA_integer_, borocd = NA_integer_,  point.type = NA_integer_, point.coordinates = NA_integer_, ct2010 = NA_integer_,  precinct = NA_integer_, bbl = NA_integer_, bin = NA_integer_,  census_code = NA_integer_, ct2010_2 = NA_integer_, county_code = NA_integer_ ), .Label = c(\"constant\", \"aggregate\", \"identity\"), class = \"factor\"), class = c(\"sf\",  \"data.frame\"))",
        "caption": "food_scrap_sf",
        "totalObservations": 208,
        "displayedObservations": 208,
        "variables": 22,
        "cacheKey": "BD5BAFBD",
        "object": "",
        "environment": "_rs_no_env",
        "contentUrl": "grid_resource/gridviewer.html?env=_rs_no_env&obj=&cache_key=BD5BAFBD&max_cols=50",
        "preview": 0,
        "source_window_id": "",
        "Source": "Source"
    },
    "folds": "",
    "lastKnownWriteTime": 7587195518810485607,
    "encoding": "",
    "collab_server": "",
    "source_window": "",
    "last_content_update": 1651446248801,
    "read_only": false,
    "read_only_alternatives": []
}